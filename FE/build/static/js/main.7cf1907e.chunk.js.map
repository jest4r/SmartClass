{"version":3,"sources":["components/shared-components/Flex/index.js","constants/ThemeConstant.js","redux/constants/Auth.js","configs/EnvironmentConfig.js","configs/AppConfig.js","redux/reducers/Auth.js","redux/constants/Theme.js","redux/reducers/Theme.js","redux/reducers/index.js","configs/FirebaseConfig.js","auth/FirebaseAuth.js","services/FirebaseService.js","redux/sagas/Auth.js","redux/sagas/index.js","redux/store/index.js","components/util-components/IntlMessage/index.js","components/util-components/Icon/index.js","configs/NavigationConfig.js","redux/actions/Theme.js","components/layout-components/MenuContent.js","components/layout-components/SideNav.js","components/layout-components/TopNav.js","components/layout-components/Logo.js","components/layout-components/MobileNav.js","components/layout-components/NavNotification.js","components/layout-components/NavProfile.js","components/layout-components/NavLanguage.js","components/shared-components/ColorPicker/index.js","components/layout-components/ThemeConfigurator.js","components/layout-components/NavPanel.js","components/layout-components/NavSearch/SearchInput.js","components/layout-components/NavSearch/index.js","components/layout-components/HeaderNav.js","components/layout-components/AppBreadcrumb.js","components/layout-components/PageHeader.js","components/layout-components/Footer.js","views/app-views/index.js","layouts/app-layout/index.js","views/auth-views/index.js","layouts/auth-layout/index.js","lang/entries/en_US.js","lang/entries/zh_CN.js","lang/entries/fr_FR.js","lang/index.js","lang/entries/ja_JP.js","hooks/useBodyClass.js","views/index.js","App.js","serviceWorker.js","index.js","redux/actions/Auth.js","utils/index.js","components/shared-components/Loading/index.js"],"names":["Flex","props","children","className","alignItems","justifyContent","mobileFlex","flexDirection","_jsx","concat","defaultProps","SIDE_NAV_WIDTH","SIDE_NAV_COLLAPSED_WIDTH","SIDE_NAV_LIGHT","SIDE_NAV_DARK","NAV_TYPE_SIDE","NAV_TYPE_TOP","DIR_LTR","DIR_RTL","SIGNIN","AUTHENTICATED","SIGNOUT","SIGNOUT_SUCCESS","SIGNUP","SIGNUP_SUCCESS","SHOW_AUTH_MESSAGE","HIDE_AUTH_MESSAGE","SHOW_LOADING","AUTH_TOKEN","SIGNIN_WITH_GOOGLE","SIGNIN_WITH_GOOGLE_AUTHENTICATED","SIGNIN_WITH_FACEBOOK","SIGNIN_WITH_FACEBOOK_AUTHENTICATED","APP_NAME","API_BASE_URL","API_ENDPOINT_URL","APP_PREFIX_PATH","AUTH_PREFIX_PATH","THEME_CONFIG","navCollapsed","sideNavTheme","locale","navType","topNavColor","headerNavColor","mobileNav","currentTheme","direction","initState","loading","message","showMessage","redirect","token","localStorage","getItem","auth","state","arguments","length","undefined","action","type","TOGGLE_COLLAPSED_NAV","CHANGE_LOCALE","SIDE_NAV_STYLE_CHANGE","NAV_TYPE_CHANGE","TOP_NAV_COLOR_CHANGE","HEADER_NAV_COLOR_CHANGE","TOGGLE_MOBILE_NAV","SWITCH_THEME","DIRECTION_CHANGE","initTheme","theme","reducers","combineReducers","Theme","Auth","FirebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","initializeApp","firebaseConfig","firestore","googleAuthProvider","currentUser","GoogleAuthProvider","facebookAuthProvider","FacebookAuthProvider","FirebaseService","TwitterAuthProvider","GithubAuthProvider","async","email","password","signInWithEmailAndPassword","then","user","catch","err","signInEmailRequest","signOutRequest","signOut","signInGoogleRequest","signInWithPopup","signInFacebookRequest","signUpEmailRequest","createUserWithEmailAndPassword","signInWithFBEmail","takeEvery","_ref","payload","call","put","showAuthMessage","setItem","uid","authenticated","signOutUser","removeItem","signOutSuccess","signUpWithFBEmail","_ref2","signUpSuccess","error","signInWithFBGoogle","signInWithGoogleAuthenticated","signInWithFacebook","signInWithFacebookAuthenticated","rootSaga","all","fork","getState","sagaMiddleware","createSagaMiddleware","middlewares","store","preloadedState","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","run","configureStore","injectIntl","FormattedMessage","withRef","Icon","Component","render","this","_Fragment","React","createElement","navigationConfig","key","path","title","icon","AppstoreOutlined","breadcrumb","submenu","BookOutlined","ProfileOutlined","toggleCollapsedNav","onMobileNavToggle","SubMenu","Menu","useBreakpoint","Grid","setLocale","isLocaleOn","localeKey","IntlMessage","id","toString","setDefaultOpen","keyList","keyString","arr","split","index","elm","push","SideNavContent","routeInfo","hideGroupTitle","localization","isMobile","utils","getBreakPoint","includes","closeMobileNav","mode","style","height","borderRight","defaultSelectedKeys","defaultOpenKeys","map","menu","ItemGroup","subMenuFirst","subMenuSecond","_jsxs","Item","Link","onClick","to","TopNavContent","backgroundColor","popupClassName","connect","Sider","Layout","width","collapsed","Scrollbars","autoHide","MenuContent","getColorContrast","getLogoWidthGutter","isNavTop","mobileLogo","getLogo","logoType","getLogoDisplay","src","alt","onClose","Drawer","placement","closable","visible","bodyStyle","padding","Logo","ArrowLeftOutlined","getIcon","MailOutlined","WarningOutlined","CheckCircleOutlined","NavNotification","setVisible","useState","data","setData","notificationData","notificationList","Button","size","list","List","itemLayout","dataSource","renderItem","item","img","Avatar","name","desc","time","href","Dropdown","overlay","onVisibleChange","flag","trigger","Badge","count","BellOutlined","menuItem","EditOutlined","SettingOutlined","ShopOutlined","QuestionCircleOutlined","profileImg","profileMenu","el","i","e","LogoutOutlined","SelectedLanguage","language","lang","filter","langId","getLanguageDetail","langName","maxWidth","DownOutlined","_ref3","onLocaleChange","configDisplay","languageOption","CheckOutlined","preventDefault","GlobalOutlined","ColorPicker","colorChange","color","pickerColor","setPickerColor","boxColor","setBoxColor","useEffect","onPickerDropdown","SketchPicker","onChange","value","rgb","rgba","r","g","b","a","colorOptions","ListOption","selector","disabled","vertical","mapDispatchToProps","onNavTypeChange","onNavStyleChange","onTopNavColorChange","onHeaderNavColorChange","onSwitchTheme","onDirectionChange","isCollapse","switcher","themes","useThemeSwitcher","hex","rgbaToHex","Radio","Group","onNavTypeClick","target","Switch","checked","isChecked","changedTheme","NavLanguage","CopyToClipboard","text","configState","JSON","stringify","onCopy","success","CopyOutlined","block","NavPanel","constructor","showDrawer","setState","ThemeConfigurator","optionList","getOptionList","navigationTree","optionTree","navItem","getCategoryIcon","category","DashboardOutlined","AntDesignOutlined","FileTextOutlined","SearchInput","active","close","setValue","options","setOptions","inputRef","useRef","current","focus","AutoComplete","ref","dropdownClassName","onSelect","onSearch","searchText","label","filterOption","inputValue","option","toUpperCase","indexOf","Input","placeholder","prefix","SearchOutlined","CloseOutlined","Header","history","useHistory","searchActive","setSearchActive","onSearchClose","navMode","MenuUnfoldOutlined","MenuFoldOutlined","fontSize","fontWeight","cursor","NavProfile","NavSearch","breadcrumbData","forEach","assignBreadcrumb","obj","BreadcrumbRoute","withRouter","location","pathSnippets","pathname","buildBreadcrumb","_","url","slice","join","Breadcrumb","AppBreadcrumb","PageHeader","display","Footer","Date","getFullYear","AppViews","Suspense","fallback","Loading","cover","Route","component","lazy","Redirect","from","memo","Content","AppLayout","currentRouteInfo","getRouteInfo","screens","isNavSide","getLayoutGutter","status","HeaderNav","TopNav","SideNav","paddingLeft","paddingRight","MobileNav","AuthLayout","AuthViews","EnLang","antd","antdEnUS","messages","enMsg","ZhLang","antdZhCn","zhMsg","FrLang","antdFrFR","frMsg","AppLocale","en","enLang","zh","zhLang","fr","frLang","ja","antdJaJP","jaMsg","addBodyClass","document","body","classList","add","removeBodyClass","remove","RouteInterceptor","isAuthenticated","rest","currentAppLocale","Array","IntlProvider","ConfigProvider","exact","dark","process","light","App","Provider","ThemeSwitcherProvider","themeMap","defaultTheme","insertionPoint","Router","Views","Boolean","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","signIn","signUp","signInWithGoogle","hideAuthMessage","showLoading","Utils","initials","shift","pop","navTree","route","p","hasOwnProperty","cutHex","h","charAt","substring","parseInt","hexToG","hexToB","percent","R","G","B","RR","GG","BB","trim","str","replace","inParts","parseFloat","toFixed","outParts","Math","round","part","number","positive","negative","toLowerCase","input","breakpoints","LoadingOutlined","spin","align","Spin","indicator"],"mappings":"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","file":"static/js/main.7cf1907e.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Flex = props => {\r\n\tconst { children, className, alignItems, justifyContent, mobileFlex, flexDirection } = props\r\n\tconst getFlexResponsive = () => mobileFlex ? 'd-flex' : 'd-md-flex'\r\n\treturn (\r\n\t\t<div className={`${getFlexResponsive()} ${className} ${flexDirection?('flex-' + flexDirection): ''} ${alignItems?('align-items-' + alignItems):''} ${justifyContent?('justify-content-' + justifyContent):''}` }>\r\n\t\t\t{children}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nFlex.propTypes = {\r\n\tclassName: PropTypes.string,\r\n\talignItems: PropTypes.string,\r\n\tflexDirection: PropTypes.string,\r\n\tjustifyContent: PropTypes.string,\r\n\tmobileFlex: PropTypes.bool\r\n}\r\n\r\nFlex.defaultProps = {\r\n\tmobileFlex: true,\r\n\tflexDirection: 'row',\r\n\tclassName: ''\r\n};\r\n\r\n\r\nexport default Flex\r\n","export const ROW_GUTTER = 16;\r\nexport const SIDE_NAV_WIDTH = 200;\r\nexport const SIDE_NAV_COLLAPSED_WIDTH = 80;\r\nexport const SIDE_NAV_LIGHT = 'SIDE_NAV_LIGHT';\r\nexport const SIDE_NAV_DARK = 'SIDE_NAV_DARK';\r\nexport const NAV_TYPE_SIDE = 'SIDE'\r\nexport const NAV_TYPE_TOP = 'TOP'\r\nexport const DIR_LTR = 'ltr'\r\nexport const DIR_RTL = 'rtl'\r\n","export const SIGNIN = 'SIGNIN'; \r\nexport const AUTHENTICATED = 'AUTHENTICATED';\r\nexport const SIGNOUT = 'SIGNOUT';\r\nexport const SIGNOUT_SUCCESS = 'SIGNOUT_SUCCESS'\r\nexport const SIGNUP = 'SIGNUP';\r\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS'\r\nexport const SHOW_AUTH_MESSAGE = 'SHOW_AUTH_MESSAGE'\r\nexport const HIDE_AUTH_MESSAGE = 'HIDE_AUTH_MESSAGE'\r\nexport const SHOW_LOADING = 'SHOW_LOADING'\r\nexport const AUTH_TOKEN = 'auth_token'\r\nexport const SIGNIN_WITH_GOOGLE = 'SIGNIN_WITH_GOOGLE'\r\nexport const SIGNIN_WITH_GOOGLE_AUTHENTICATED = 'SIGNIN_WITH_GOOGLE_AUTHENTICATED'\r\nexport const SIGNIN_WITH_FACEBOOK = 'SIGNIN_WITH_FACEBOOK'\r\nexport const SIGNIN_WITH_FACEBOOK_AUTHENTICATED = 'SIGNIN_WITH_FACEBOOK_AUTHENTICATED'","const dev = {\r\n  API_ENDPOINT_URL: 'http://localhost:8069/api'\r\n};\r\n\r\nconst prod = {\r\n  API_ENDPOINT_URL: 'https://api.prod.com'\r\n};\r\n\r\nconst test = {\r\n  API_ENDPOINT_URL: 'https://api.test.com'\r\n};\r\n\r\nconst getEnv = () => {\r\n\tswitch (process.env.NODE_ENV) {\r\n\t\tcase 'development':\r\n\t\t\treturn dev\r\n\t\tcase 'production':\r\n\t\t\treturn prod\r\n\t\tcase 'test':\r\n\t\t\treturn test\r\n\t\tdefault:\r\n\t\t\tbreak;\r\n\t}\r\n}\r\n\r\nexport const env = getEnv()\r\n","import { SIDE_NAV_DARK, NAV_TYPE_SIDE, DIR_LTR } from 'constants/ThemeConstant';\r\nimport { env } from './EnvironmentConfig'\r\n\r\nexport const APP_NAME = 'SmartClass';\r\nexport const API_BASE_URL = env.API_ENDPOINT_URL\r\nexport const APP_PREFIX_PATH = '/app';\r\nexport const AUTH_PREFIX_PATH = '/auth';\r\n\r\nexport const THEME_CONFIG = {\r\n\tnavCollapsed: false,\r\n\tsideNavTheme: SIDE_NAV_DARK,\r\n\tlocale: 'en',\r\n\tnavType: NAV_TYPE_SIDE,\r\n\ttopNavColor: '#3e82f7',\r\n\theaderNavColor: '',\r\n\tmobileNav: false,\r\n\tcurrentTheme: 'light',\r\n\tdirection: DIR_LTR\r\n};\r\n","import {\r\n\tAUTH_TOKEN,\r\n\tAUTHENTICATED,\r\n\tSHOW_AUTH_MESSAGE,\r\n\tHIDE_AUTH_MESSAGE,\r\n\tSIGNOUT_SUCCESS,\r\n\tSIGNUP_SUCCESS,\r\n\tSHOW_LOADING,\r\n\tSIGNIN_WITH_GOOGLE_AUTHENTICATED,\r\n  SIGNIN_WITH_FACEBOOK_AUTHENTICATED\r\n} from '../constants/Auth';\r\n\r\nconst initState = {\r\n  loading: false,\r\n  message: '',\r\n  showMessage: false,\r\n  redirect: '',\r\n  token: localStorage.getItem(AUTH_TOKEN),\r\n}\r\n\r\nconst auth = (state = initState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase AUTHENTICATED:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\tredirect: '/',\r\n\t\t\t\ttoken: action.token\r\n\t\t\t}\r\n\t\tcase SHOW_AUTH_MESSAGE: \r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tmessage: action.message,\r\n\t\t\t\tshowMessage: true,\r\n\t\t\t\tloading: false\r\n\t\t\t}\r\n\t\tcase HIDE_AUTH_MESSAGE: \r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tmessage: '',\r\n\t\t\t\tshowMessage: false,\r\n\t\t\t}\r\n\t\tcase SIGNOUT_SUCCESS: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttoken: null,\r\n\t\t\t\tredirect: '/',\r\n\t\t\t\tloading: false\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SIGNUP_SUCCESS: {\r\n\t\t\treturn {\r\n\t\t\t  ...state,\r\n\t\t\t  loading: false,\r\n\t\t\t  token: action.token\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SHOW_LOADING: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: true\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SIGNIN_WITH_GOOGLE_AUTHENTICATED: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\ttoken: action.token\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SIGNIN_WITH_FACEBOOK_AUTHENTICATED: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\ttoken: action.token\r\n\t\t\t}\r\n\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nexport default auth","export const TOGGLE_COLLAPSED_NAV = 'TOGGLE_COLLAPSED_NAV';\r\nexport const CHANGE_LOCALE = 'CHANGE_LOCALE';\r\nexport const SIDE_NAV_STYLE_CHANGE = 'SIDE_NAV_STYLE_CHANGE';\r\nexport const NAV_TYPE_CHANGE = 'NAV_TYPE_CHANGE';\r\nexport const TOP_NAV_COLOR_CHANGE = 'TOP_NAV_COLOR_CHANGE';\r\nexport const HEADER_NAV_COLOR_CHANGE = 'HEADER_NAV_COLOR_CHANGE';\r\nexport const TOGGLE_MOBILE_NAV = 'TOGGLE_MOBILE_NAV';\r\nexport const SWITCH_THEME = 'SWITCH_THEME';\r\nexport const DIRECTION_CHANGE = 'DIRECTION_CHANGE';","import {\r\n  TOGGLE_COLLAPSED_NAV,\r\n  CHANGE_LOCALE,\r\n  SIDE_NAV_STYLE_CHANGE,\r\n  NAV_TYPE_CHANGE,\r\n  TOP_NAV_COLOR_CHANGE,\r\n  HEADER_NAV_COLOR_CHANGE,\r\n  TOGGLE_MOBILE_NAV,\r\n  SWITCH_THEME,\r\n  DIRECTION_CHANGE\r\n} from '../constants/Theme';\r\nimport { THEME_CONFIG } from 'configs/AppConfig'\r\n\r\nconst initTheme = {\r\n  ...THEME_CONFIG\r\n};\r\n\r\nconst theme = (state = initTheme, action) => {\r\n  switch (action.type) {\r\n    case TOGGLE_COLLAPSED_NAV:\r\n      return {\r\n        ...state,\r\n        navCollapsed: action.navCollapsed\r\n      };\r\n    case SIDE_NAV_STYLE_CHANGE:\r\n      return {\r\n        ...state,\r\n        sideNavTheme: action.sideNavTheme\r\n      };\r\n    case CHANGE_LOCALE:\r\n      return {\r\n        ...state,\r\n        locale: action.locale\r\n      };\r\n    case NAV_TYPE_CHANGE:\r\n      return {\r\n        ...state,\r\n        navType: action.navType\r\n      };\r\n    case TOP_NAV_COLOR_CHANGE:\r\n      return {\r\n        ...state,\r\n        topNavColor: action.topNavColor\r\n      };\r\n    case HEADER_NAV_COLOR_CHANGE:\r\n      return {\r\n        ...state,\r\n        headerNavColor: action.headerNavColor\r\n      };\r\n    case TOGGLE_MOBILE_NAV:\r\n      return {\r\n        ...state,\r\n        mobileNav: action.mobileNav\r\n      };\r\n    case SWITCH_THEME:\r\n      return {\r\n        ...state,\r\n        currentTheme: action.currentTheme\r\n      }\r\n    case DIRECTION_CHANGE:\r\n      return {\r\n        ...state,\r\n        direction: action.direction\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default theme","import { combineReducers } from 'redux';\r\nimport Auth from './Auth';\r\nimport Theme from './Theme';\r\n\r\nconst reducers = combineReducers({\r\n    theme: Theme,\r\n    auth: Auth\r\n});\r\n\r\nexport default reducers;","const FirebaseConfig = {\r\n  apiKey: 'AIzaSyAOWoRQGoegkmwnCca7B2GG5GUG_ZP1lcM',\r\n  authDomain: 'emilus.firebaseapp.com',\r\n  databaseURL: 'https://emilus.firebaseio.com',\r\n  projectId: 'emilus',\r\n  storageBucket: 'emilus.appspot.com',\r\n  messagingSenderId: '807555350717',\r\n  appId: '1:807555350717:web:145ba7c21af47203a2f7d4',\r\n  measurementId: 'G-8KE7HJB252'\r\n};\r\n\r\nexport default FirebaseConfig\r\n\r\n","import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\nimport firebaseConfig from 'configs/FirebaseConfig';\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n// firebase utils\r\nconst db = firebase.firestore()\r\nconst auth = firebase.auth();\r\nconst currentUser = auth.currentUser\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\nconst facebookAuthProvider = new firebase.auth.FacebookAuthProvider();\r\nconst twitterAuthProvider = new firebase.auth.TwitterAuthProvider();\r\nconst githubAuthProvider = new firebase.auth.GithubAuthProvider();\r\n\r\nexport {\r\n\tdb,\r\n\tauth,\r\n\tcurrentUser,\r\n\tgoogleAuthProvider,\r\n\tfacebookAuthProvider,\r\n\ttwitterAuthProvider,\r\n\tgithubAuthProvider\r\n};","import { auth, googleAuthProvider, facebookAuthProvider } from 'auth/FirebaseAuth';\r\n\r\nconst FirebaseService = {}\r\n\r\nFirebaseService.signInEmailRequest = async (email, password) =>\r\n\tawait auth.signInWithEmailAndPassword(email, password).then(user => user).catch(err => err);\r\n\r\nFirebaseService.signInEmailRequest = async (email, password) =>\r\n  await auth.signInWithEmailAndPassword(email, password).then(user => user).catch(err => err);\r\n\t\t\r\nFirebaseService.signOutRequest = async () =>\r\n\tawait auth.signOut().then(user => user).catch(err => err);\r\n\r\nFirebaseService.signInGoogleRequest = async () =>\r\n  await auth.signInWithPopup(googleAuthProvider).then(user => user).catch(err => err);\r\n\r\nFirebaseService.signInFacebookRequest = async () =>\r\n  await auth.signInWithPopup(facebookAuthProvider).then(user => user).catch(err => err);\r\n\r\nFirebaseService.signUpEmailRequest = async (email, password) =>\r\n\tawait auth.createUserWithEmailAndPassword(email, password).then(user => user).catch(err => err);\t\r\n\t\r\nexport default FirebaseService","import { all, takeEvery, put, fork, call } from 'redux-saga/effects';\r\nimport {\r\n\tAUTH_TOKEN,\r\n\tSIGNIN,\r\n\tSIGNOUT,\r\n\tSIGNUP,\r\n\tSIGNIN_WITH_GOOGLE,\r\n\tSIGNIN_WITH_FACEBOOK\r\n} from '../constants/Auth';\r\nimport {\r\n\tshowAuthMessage,\r\n\tauthenticated,\r\n\tsignOutSuccess,\r\n\tsignUpSuccess,\r\n\tsignInWithGoogleAuthenticated,\r\n\tsignInWithFacebookAuthenticated\r\n} from \"../actions/Auth\";\r\n\r\nimport FirebaseService from 'services/FirebaseService'\r\n\r\nexport function* signInWithFBEmail() {\r\n  yield takeEvery(SIGNIN, function* ({payload}) {\r\n\t\tconst {email, password} = payload;\r\n\t\ttry {\r\n\t\t\tconst user = yield call(FirebaseService.signInEmailRequest, email, password);\r\n\t\t\tif (user.message) {\r\n\t\t\t\tyield put(showAuthMessage(user.message));\r\n\t\t\t} else {\r\n\t\t\t\tlocalStorage.setItem(AUTH_TOKEN, user.user.uid);\r\n\t\t\t\tyield put(authenticated(user.user.uid));\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tyield put(showAuthMessage(err));\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport function* signOut() {\r\n  yield takeEvery(SIGNOUT, function* () {\r\n\t\ttry {\r\n\t\t\tconst signOutUser = yield call(FirebaseService.signOutRequest);\r\n\t\t\tif (signOutUser === undefined) {\r\n\t\t\t\tlocalStorage.removeItem(AUTH_TOKEN);\r\n\t\t\t\tyield put(signOutSuccess(signOutUser));\r\n\t\t\t} else {\r\n\t\t\t\tyield put(showAuthMessage(signOutUser.message));\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tyield put(showAuthMessage(err));\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport function* signUpWithFBEmail() {\r\n  yield takeEvery(SIGNUP, function* ({payload}) {\r\n\t\tconst {email, password} = payload;\r\n\t\ttry {\r\n\t\t\tconst user = yield call(FirebaseService.signUpEmailRequest, email, password);\r\n\t\t\tif (user.message) {\r\n\t\t\t\tyield put(showAuthMessage(user.message));\r\n\t\t\t} else {\r\n\t\t\t\tlocalStorage.setItem(AUTH_TOKEN, user.user.uid);\r\n\t\t\t\tyield put(signUpSuccess(user.user.uid));\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tyield put(showAuthMessage(error));\r\n\t\t}\r\n\t}\r\n\t);\r\n}\r\n\r\nexport function* signInWithFBGoogle() {\r\n  yield takeEvery(SIGNIN_WITH_GOOGLE, function* () {\r\n\t\ttry {\r\n\t\t\tconst user = yield call(FirebaseService.signInGoogleRequest);\r\n\t\t\tif (user.message) {\r\n\t\t\t\tyield put(showAuthMessage(user.message));\r\n\t\t\t} else {\r\n\t\t\t\tlocalStorage.setItem(AUTH_TOKEN, user.user.uid);\r\n\t\t\t\tyield put(signInWithGoogleAuthenticated(user.user.uid));\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tyield put(showAuthMessage(error));\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport function* signInWithFacebook() {\r\n  yield takeEvery(SIGNIN_WITH_FACEBOOK, function* () {\r\n\t\ttry {\r\n\t\t\tconst user = yield call(FirebaseService.signInFacebookRequest);\r\n\t\t\tif (user.message) {\r\n\t\t\t\tyield put(showAuthMessage(user.message));\r\n\t\t\t} else {\r\n\t\t\t\tlocalStorage.setItem(AUTH_TOKEN, user.user.uid);\r\n\t\t\t\tyield put(signInWithFacebookAuthenticated(user.user.uid));\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tyield put(showAuthMessage(error));\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport default function* rootSaga() {\r\n  yield all([\r\n\t\tfork(signInWithFBEmail),\r\n\t\tfork(signOut),\r\n\t\tfork(signUpWithFBEmail),\r\n\t\tfork(signInWithFBGoogle),\r\n\t\tfork(signInWithFacebook)\r\n  ]);\r\n}\r\n","import { all } from 'redux-saga/effects';\r\nimport Auth from './Auth';\r\n\r\nexport default function* rootSaga(getState) {\r\n  yield all([\r\n    Auth(),\r\n  ]);\r\n}\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport reducers from \"../reducers\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport rootSaga from \"../sagas/index\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst middlewares = [sagaMiddleware];\r\n\r\nfunction configureStore(preloadedState) {\r\n \r\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n  const store = createStore(reducers, preloadedState, composeEnhancers(\r\n    applyMiddleware(...middlewares)\r\n  ));\r\n\r\n  sagaMiddleware.run(rootSaga);\r\n\r\n  if (module.hot) {\r\n    module.hot.accept(\"../reducers/index\", () => {\r\n      const nextRootReducer = require(\"../reducers/index\");\r\n      store.replaceReducer(nextRootReducer);\r\n    });\r\n  }\r\n\r\n  return store;\r\n}\r\n\r\nconst store = configureStore();\r\n\r\nexport default store;\r\n\r\n","import React from \"react\";\r\nimport {FormattedMessage, injectIntl} from \"react-intl\";\r\n\r\nconst IntlMessage = props => <FormattedMessage {...props} />;\r\nexport default injectIntl(IntlMessage, {\r\n  withRef: false\r\n});\r\n","import React, { Component } from 'react'\r\n\r\nexport class Icon extends Component {\r\n\trender() {\r\n\t\tconst { type, className  } = this.props;\r\n\t\treturn (\r\n\t\t\t<>{React.createElement(type, { className: className })}</>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Icon\r\n","import { \r\n  AppstoreOutlined,\r\n  BookOutlined,\r\n  ProfileOutlined\r\n} from '@ant-design/icons';\r\nimport { APP_PREFIX_PATH } from 'configs/AppConfig'\r\n\r\n// const extraNavTree = [\r\n//   {\r\n//     key: 'extra',\r\n//     path: `${APP_PREFIX_PATH}/pages`,\r\n//     title: 'sidenav.pages',\r\n//     icon: PlusCircleOutlined,\r\n//     breadcrumb: true,\r\n//     submenu: [\r\n//       // {\r\n//       //   key: 'extra-pages',\r\n//       //   path: `${APP_PREFIX_PATH}/pages`,\r\n//       //   title: 'sidenav.pages',\r\n//       //   icon: FileTextOutlined,\r\n//       //   breadcrumb: true,\r\n//       //   submenu: [\r\n//       //     {\r\n//       //       key: 'extra-pages-profile',\r\n//       //       path: `${APP_PREFIX_PATH}/pages/profile`,\r\n//       //       title: 'sidenav.pages.profile',\r\n//       //       icon: '',\r\n//       //       breadcrumb: false,\r\n//       //       submenu: []\r\n//       //     },\r\n//       //     {\r\n//       //       key: 'extra-pages-list',\r\n//       //       path: `${APP_PREFIX_PATH}/pages/user-list`,\r\n//       //       title: 'sidenav.pages.userlist',\r\n//       //       icon: '',\r\n//       //       breadcrumb: true,\r\n//       //       submenu: []\r\n//       //     },\r\n//       //     {\r\n//       //       key: 'extra-pages-invoice',\r\n//       //       path: `${APP_PREFIX_PATH}/pages/invoice`,\r\n//       //       title: 'sidenav.pages.invoice',\r\n//       //       icon: '',\r\n//       //       breadcrumb: true,\r\n//       //       submenu: []\r\n//       //     },\r\n//       //     {\r\n//       //       key: 'extra-pages-pricing',\r\n//       //       path: `${APP_PREFIX_PATH}/pages/pricing`,\r\n//       //       title: 'sidenav.pages.pricing',\r\n//       //       icon: '',\r\n//       //       breadcrumb: true,\r\n//       //       submenu: []\r\n//       //     },\r\n//       //     {\r\n//       //       key: 'extra-pages-faq',\r\n//       //       path: `${APP_PREFIX_PATH}/pages/faq`,\r\n//       //       title: 'sidenav.pages.faq',\r\n//       //       icon: '',\r\n//       //       breadcrumb: false,\r\n//       //       submenu: []\r\n//       //     },\r\n//       //     {\r\n//       //       key: 'extra-pages-setting',\r\n//       //       path: `${APP_PREFIX_PATH}/pages/setting`,\r\n//       //       title: 'sidenav.pages.setting',\r\n//       //       icon: '',\r\n//       //       breadcrumb: true,\r\n//       //       submenu: []\r\n//       //     }\r\n//       //   ]\r\n//       // },\r\n//       // {\r\n//       //   key: 'extra-auth',\r\n//       //   path: `${AUTH_PREFIX_PATH}`,\r\n//       //   title: 'sidenav.authentication',\r\n//       //   icon: SafetyOutlined,\r\n//       //   breadcrumb: true,\r\n//       //   submenu: [\r\n//       //     {\r\n//       //       key: 'extra-auth-login-1',\r\n//       //       path: `${AUTH_PREFIX_PATH}/login-1`,\r\n//       //       title: 'sidenav.authentication.login.1',\r\n//       //       icon: '',\r\n//       //       breadcrumb: true,\r\n//       //       submenu: []\r\n//       //     },\r\n//       //     {\r\n//       //       key: 'extra-auth-login-2',\r\n//       //       path: `${AUTH_PREFIX_PATH}/login-2`,\r\n//       //       title: 'sidenav.authentication.login.2',\r\n//       //       icon: '',\r\n//       //       breadcrumb: true,\r\n//       //       submenu: []\r\n//       //     },\r\n//       //     {\r\n//       //       key: 'extra-auth-register-1',\r\n//       //       path: `${AUTH_PREFIX_PATH}/register-1`,\r\n//       //       title: 'sidenav.authentication.register.1',\r\n//       //       icon: '',\r\n//       //       breadcrumb: true,\r\n//       //       submenu: []\r\n//       //     },\r\n//       //     {\r\n//       //       key: 'extra-auth-register-2',\r\n//       //       path: `${AUTH_PREFIX_PATH}/register-2`,\r\n//       //       title: 'sidenav.authentication.register.2',\r\n//       //       icon: '',\r\n//       //       breadcrumb: true,\r\n//       //       submenu: []\r\n//       //     },\r\n//       //     {\r\n//       //       key: 'extra-auth-forgot-password',\r\n//       //       path: `${AUTH_PREFIX_PATH}/forgot-password`,\r\n//       //       title: 'sidenav.authentication.forgetPassword',\r\n//       //       icon: '',\r\n//       //       breadcrumb: true,\r\n//       //       submenu: []\r\n//       //     }\r\n//       //   ]\r\n//       // },\r\n//       // {\r\n//       //   key: 'extra-errors',\r\n//       //   path: `${AUTH_PREFIX_PATH}/error-1`,\r\n//       //   title: 'sidenav.errors',\r\n//       //   icon: StopOutlined,\r\n//       //   breadcrumb: true,\r\n//       //   submenu: [\r\n//       //     {\r\n//       //       key: 'extra-errors-error-1',\r\n//       //       path: `${AUTH_PREFIX_PATH}/error-1`,\r\n//       //       title: 'sidenav.errors.error.1',\r\n//       //       icon: '',\r\n//       //       breadcrumb: true,\r\n//       //       submenu: []\r\n//       //     },\r\n//       //     {\r\n//       //       key: 'extra-errors-error-2',\r\n//       //       path: `${AUTH_PREFIX_PATH}/error-2`,\r\n//       //       title: 'sidenav.errors.error.2',\r\n//       //       icon: '',\r\n//       //       breadcrumb: true,\r\n//       //       submenu: []\r\n//       //     }\r\n//       //   ]\r\n//       // }\r\n//     ]\r\n//   }\r\n// ]\r\n\r\n// const dashBoardNavTree = [{\r\n//   key: 'dashboards',\r\n//   path: `${APP_PREFIX_PATH}/dashboards`,\r\n//   title: 'sidenav.dashboard',\r\n//   icon: DashboardOutlined,\r\n//   breadcrumb: false,\r\n//   submenu: [\r\n//     {\r\n//       key: 'dashboards-default',\r\n//       path: `${APP_PREFIX_PATH}/dashboards/default`,\r\n//       title: 'sidenav.dashboard.default',\r\n//       icon: DashboardOutlined,\r\n//       breadcrumb: false,\r\n//       submenu: []\r\n//     },\r\n//     {\r\n//       key: 'dashboards-analytic',\r\n//       path: `${APP_PREFIX_PATH}/dashboards/analytic`,\r\n//       title: 'sidenav.dashboard.analytic',\r\n//       icon: DotChartOutlined,\r\n//       breadcrumb: false,\r\n//       submenu: []\r\n//     },\r\n//     {\r\n//       key: 'dashboards-sales',\r\n//       path: `${APP_PREFIX_PATH}/dashboards/sales`,\r\n//       title: 'sidenav.dashboard.sales',\r\n//       icon: FundOutlined,\r\n//       breadcrumb: false,\r\n//       submenu: []\r\n//     }\r\n//   ]\r\n// }]\r\n\r\nconst appsNavTree = [{\r\n  key: 'apps',\r\n  path: `${APP_PREFIX_PATH}/apps`,\r\n  title: 'sidenav.apps',\r\n  icon: AppstoreOutlined,\r\n  breadcrumb: true,\r\n  submenu: [\r\n    \r\n    {\r\n      key: 'apps-classes',\r\n      path: `${APP_PREFIX_PATH}/apps/classes`,\r\n      title: 'Classes',\r\n      icon: BookOutlined,\r\n      breadcrumb: true,\r\n      submenu: []\r\n    }, \r\n    {\r\n      key: 'apps-students',\r\n      path: `${APP_PREFIX_PATH}/apps/students`,\r\n      title: 'Students',\r\n      icon: ProfileOutlined,\r\n      breadcrumb: true,\r\n      submenu: []\r\n    }, \r\n  ]\r\n}]\r\n\r\nconst navigationConfig = [\r\n\r\n  ...appsNavTree,\r\n]\r\n\r\nexport default navigationConfig;\r\n","import {\r\n  TOGGLE_COLLAPSED_NAV,\r\n  SIDE_NAV_STYLE_CHANGE,\r\n  CHANGE_LOCALE,\r\n  NAV_TYPE_CHANGE,\r\n  TOP_NAV_COLOR_CHANGE,\r\n  HEADER_NAV_COLOR_CHANGE,\r\n  TOGGLE_MOBILE_NAV,\r\n  SWITCH_THEME,\r\n  DIRECTION_CHANGE\r\n} from '../constants/Theme';\r\n\r\nexport function toggleCollapsedNav(navCollapsed) {\r\n  return {\r\n    type: TOGGLE_COLLAPSED_NAV,\r\n    navCollapsed\r\n  };\r\n}\r\n\r\nexport function onNavStyleChange(sideNavTheme) {\r\n  return {\r\n    type: SIDE_NAV_STYLE_CHANGE,\r\n    sideNavTheme\r\n  };\r\n}\r\n\r\nexport function onLocaleChange(locale) {\r\n  return {\r\n    type: CHANGE_LOCALE,\r\n    locale\r\n  };\r\n}\r\n\r\nexport function onNavTypeChange(navType) {\r\n  return {\r\n    type: NAV_TYPE_CHANGE,\r\n    navType\r\n  };\r\n}\r\n\r\nexport function onTopNavColorChange(topNavColor) {\r\n  return {\r\n    type: TOP_NAV_COLOR_CHANGE,\r\n    topNavColor\r\n  };\r\n}\r\n\r\nexport function onHeaderNavColorChange(headerNavColor) {\r\n  return {\r\n    type: HEADER_NAV_COLOR_CHANGE,\r\n    headerNavColor\r\n  };\r\n}\r\n\r\nexport function onMobileNavToggle(mobileNav) {\r\n  return {\r\n    type: TOGGLE_MOBILE_NAV,\r\n    mobileNav\r\n  };\r\n}\r\n\r\nexport function onSwitchTheme(currentTheme) {\r\n  return {\r\n    type: SWITCH_THEME,\r\n    currentTheme\r\n  };\r\n}\r\n\r\nexport function onDirectionChange(direction) {\r\n  return {\r\n    type: DIRECTION_CHANGE,\r\n    direction\r\n  };\r\n}","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Menu, Grid } from \"antd\";\r\nimport IntlMessage from \"../util-components/IntlMessage\";\r\nimport Icon from \"../util-components/Icon\";\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\nimport { connect } from \"react-redux\";\r\nimport { SIDE_NAV_LIGHT, NAV_TYPE_SIDE } from \"constants/ThemeConstant\";\r\nimport utils from 'utils'\r\nimport { onMobileNavToggle } from \"redux/actions/Theme\";\r\n\r\nconst { SubMenu } = Menu;\r\nconst { useBreakpoint } = Grid;\r\n\r\nconst setLocale = (isLocaleOn, localeKey) =>\r\n  isLocaleOn ? <IntlMessage id={localeKey} /> : localeKey.toString();\r\n\r\nconst setDefaultOpen = (key) => {\r\n  let keyList = [];\r\n  let keyString = \"\";\r\n  if (key) {\r\n    const arr = key.split(\"-\");\r\n    for (let index = 0; index < arr.length; index++) {\r\n      const elm = arr[index];\r\n      index === 0 ? (keyString = elm) : (keyString = `${keyString}-${elm}`);\r\n      keyList.push(keyString);\r\n    }\r\n  }\r\n  return keyList;\r\n};\r\n\r\nconst SideNavContent = (props) => {\r\n\tconst { sideNavTheme, routeInfo, hideGroupTitle, localization, onMobileNavToggle } = props;\r\n\tconst isMobile = !utils.getBreakPoint(useBreakpoint()).includes('lg')\r\n\tconst closeMobileNav = () => {\r\n\t\tif (isMobile) {\r\n\t\t\tonMobileNavToggle(false)\r\n\t\t}\r\n\t}\r\n  return (\r\n    <Menu\r\n      theme={sideNavTheme === SIDE_NAV_LIGHT ? \"light\" : \"dark\"}\r\n      mode=\"inline\"\r\n      style={{ height: \"100%\", borderRight: 0 }}\r\n      defaultSelectedKeys={[routeInfo?.key]}\r\n      defaultOpenKeys={setDefaultOpen(routeInfo?.key)}\r\n      className={hideGroupTitle ? \"hide-group-title\" : \"\"}\r\n    >\r\n      {navigationConfig.map((menu) =>\r\n        menu.submenu.length > 0 ? (\r\n          <Menu.ItemGroup\r\n            key={menu.key}\r\n            title={setLocale(localization, menu.title)}\r\n          >\r\n            {menu.submenu.map((subMenuFirst) =>\r\n              subMenuFirst.submenu.length > 0 ? (\r\n                <SubMenu\r\n                  icon={\r\n                    subMenuFirst.icon ? (\r\n                      <Icon type={subMenuFirst?.icon} />\r\n                    ) : null\r\n                  }\r\n                  key={subMenuFirst.key}\r\n                  title={setLocale(localization, subMenuFirst.title)}\r\n                >\r\n                  {subMenuFirst.submenu.map((subMenuSecond) => (\r\n                    <Menu.Item key={subMenuSecond.key}>\r\n                      {subMenuSecond.icon ? (\r\n                        <Icon type={subMenuSecond?.icon} />\r\n                      ) : null}\r\n                      <span>\r\n                        {setLocale(localization, subMenuSecond.title)}\r\n                      </span>\r\n                      <Link onClick={() => closeMobileNav()} to={subMenuSecond.path} />\r\n                    </Menu.Item>\r\n                  ))}\r\n                </SubMenu>\r\n              ) : (\r\n                <Menu.Item key={subMenuFirst.key}>\r\n                  {subMenuFirst.icon ? <Icon type={subMenuFirst.icon} /> : null}\r\n                  <span>{setLocale(localization, subMenuFirst.title)}</span>\r\n                  <Link onClick={() => closeMobileNav()} to={subMenuFirst.path} />\r\n                </Menu.Item>\r\n              )\r\n            )}\r\n          </Menu.ItemGroup>\r\n        ) : (\r\n          <Menu.Item key={menu.key}>\r\n            {menu.icon ? <Icon type={menu?.icon} /> : null}\r\n            <span>{setLocale(localization, menu?.title)}</span>\r\n            {menu.path ? <Link onClick={() => closeMobileNav()} to={menu.path} /> : null}\r\n          </Menu.Item>\r\n        )\r\n      )}\r\n    </Menu>\r\n  );\r\n};\r\n\r\nconst TopNavContent = (props) => {\r\n  const { topNavColor, localization } = props;\r\n  return (\r\n    <Menu mode=\"horizontal\" style={{ backgroundColor: topNavColor }}>\r\n      {navigationConfig.map((menu) =>\r\n        menu.submenu.length > 0 ? (\r\n          <SubMenu\r\n            key={menu.key}\r\n            popupClassName=\"top-nav-menu\"\r\n            title={\r\n              <span>\r\n                {menu.icon ? <Icon type={menu?.icon} /> : null}\r\n                <span>{setLocale(localization, menu.title)}</span>\r\n              </span>\r\n            }\r\n          >\r\n            {menu.submenu.map((subMenuFirst) =>\r\n              subMenuFirst.submenu.length > 0 ? (\r\n                <SubMenu\r\n                  key={subMenuFirst.key}\r\n                  icon={\r\n                    subMenuFirst.icon ? (\r\n                      <Icon type={subMenuFirst?.icon} />\r\n                    ) : null\r\n                  }\r\n                  title={setLocale(localization, subMenuFirst.title)}\r\n                >\r\n                  {subMenuFirst.submenu.map((subMenuSecond) => (\r\n                    <Menu.Item key={subMenuSecond.key}>\r\n                      <span>\r\n                        {setLocale(localization, subMenuSecond.title)}\r\n                      </span>\r\n                      <Link to={subMenuSecond.path} />\r\n                    </Menu.Item>\r\n                  ))}\r\n                </SubMenu>\r\n              ) : (\r\n                <Menu.Item key={subMenuFirst.key}>\r\n                  {subMenuFirst.icon ? (\r\n                    <Icon type={subMenuFirst?.icon} />\r\n                  ) : null}\r\n                  <span>{setLocale(localization, subMenuFirst.title)}</span>\r\n                  <Link to={subMenuFirst.path} />\r\n                </Menu.Item>\r\n              )\r\n            )}\r\n          </SubMenu>\r\n        ) : (\r\n          <Menu.Item key={menu.key}>\r\n            {menu.icon ? <Icon type={menu?.icon} /> : null}\r\n            <span>{setLocale(localization, menu?.title)}</span>\r\n            {menu.path ? <Link to={menu.path} /> : null}\r\n          </Menu.Item>\r\n        )\r\n      )}\r\n    </Menu>\r\n  );\r\n};\r\n\r\nconst MenuContent = (props) => {\r\n  return props.type === NAV_TYPE_SIDE ? (\r\n    <SideNavContent {...props} />\r\n  ) : (\r\n    <TopNavContent {...props} />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { sideNavTheme, topNavColor } = theme;\r\n  return { sideNavTheme, topNavColor };\r\n};\r\n\r\nexport default connect(mapStateToProps, { onMobileNavToggle })(MenuContent);\r\n","import React from \"react\";\r\nimport { Layout } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport { SIDE_NAV_WIDTH, SIDE_NAV_DARK, NAV_TYPE_SIDE } from 'constants/ThemeConstant';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport MenuContent from './MenuContent'\r\n\r\nconst { Sider } = Layout;\r\n\r\nexport const SideNav = ({navCollapsed, sideNavTheme, routeInfo, hideGroupTitle, localization = true }) => {\r\n  const props = { sideNavTheme, routeInfo , hideGroupTitle, localization}\r\n  return (\r\n    <Sider \r\n      className={`side-nav ${sideNavTheme === SIDE_NAV_DARK? 'side-nav-dark' : ''}`} \r\n      width={SIDE_NAV_WIDTH} \r\n      collapsed={navCollapsed}\r\n    >\r\n      <Scrollbars autoHide>\r\n        <MenuContent \r\n          type={NAV_TYPE_SIDE} \r\n          {...props}\r\n        />\r\n      </Scrollbars>\r\n    </Sider>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, sideNavTheme } =  theme;\r\n  return { navCollapsed, sideNavTheme }\r\n};\r\n\r\nexport default connect(mapStateToProps)(SideNav);\r\n","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { NAV_TYPE_TOP } from 'constants/ThemeConstant';\r\nimport utils from 'utils'\r\nimport MenuContent from './MenuContent'\r\n\r\nexport const TopNav = ({topNavColor, localization = true}) => {\r\n\tconst props = { topNavColor, localization }\r\n\treturn (\r\n\t\t<div className={`top-nav ${utils.getColorContrast(topNavColor)}`} style={{backgroundColor: topNavColor}}>\r\n\t\t\t<div className=\"top-nav-wrapper\">\r\n\t\t\t\t<MenuContent\r\n\t\t\t\t\ttype={NAV_TYPE_TOP} \r\n\t\t\t\t\t{...props}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { topNavColor } =  theme;\r\n  return { topNavColor }\r\n};\r\n\r\nexport default connect(mapStateToProps)(TopNav);\r\n","import React from 'react'\r\nimport { SIDE_NAV_WIDTH, SIDE_NAV_COLLAPSED_WIDTH, NAV_TYPE_TOP } from 'constants/ThemeConstant';\r\nimport { APP_NAME } from 'configs/AppConfig';\r\nimport { connect } from \"react-redux\";\r\nimport utils from 'utils';\r\nimport { Grid } from 'antd';\r\n\r\nconst { useBreakpoint } = Grid;\r\n\r\nconst getLogoWidthGutter = (props, isMobile) => {\r\n  const { navCollapsed, navType } = props;\r\n  const isNavTop = navType === NAV_TYPE_TOP ? true : false\r\n  if(isMobile && !props.mobileLogo) {\r\n    return 0\r\n  }\r\n  if(isNavTop) {\r\n    return 'auto'\r\n  }\r\n  if(navCollapsed) {\r\n    return `${SIDE_NAV_COLLAPSED_WIDTH}px`\r\n  } else {\r\n    return `${SIDE_NAV_WIDTH}px`\r\n  }\r\n}\r\n\r\nconst getLogo = (props) => {\r\n  const { navCollapsed, logoType } = props;\r\n  if(logoType === 'light') {\r\n    if(navCollapsed) {\r\n      return '/img/logo-sm-white.png'\r\n    }\r\n    return '/img/logo-white.png'\r\n  }\r\n\r\n  if (navCollapsed) {\r\n    return '/img/logo-sm.png'\r\n  }\r\n  return '/img/logo.png'\r\n}\r\n\r\nconst getLogoDisplay = (isMobile, mobileLogo) => {\r\n  if(isMobile && !mobileLogo) {\r\n    return 'd-none'\r\n  } else {\r\n    return 'logo'\r\n  }\r\n}\r\n\r\nexport const Logo = (props) => {\r\n  const isMobile = !utils.getBreakPoint(useBreakpoint()).includes('lg')\r\n  return (\r\n    <div\r\n      className={getLogoDisplay(isMobile, props.mobileLogo)} \r\n      style={{width: `${getLogoWidthGutter(props, isMobile)}`}}>\r\n      <img src={getLogo(props)} alt={`${APP_NAME} logo`}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, navType } =  theme;\r\n  return { navCollapsed, navType }\r\n};\r\n\r\nexport default connect(mapStateToProps)(Logo);\r\n","import React from \"react\";\r\nimport { Drawer } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport { NAV_TYPE_SIDE } from \"constants/ThemeConstant\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport MenuContent from \"./MenuContent\";\r\nimport { onMobileNavToggle } from \"redux/actions/Theme\";\r\nimport Logo from \"./Logo\";\r\nimport Flex from \"components/shared-components/Flex\";\r\nimport { ArrowLeftOutlined } from \"@ant-design/icons\";\r\n\r\nexport const MobileNav = ({\r\n  sideNavTheme,\r\n  mobileNav,\r\n  onMobileNavToggle,\r\n  routeInfo,\r\n  hideGroupTitle,\r\n  localization = true,\r\n}) => {\r\n  const props = { sideNavTheme, routeInfo, hideGroupTitle, localization };\r\n\r\n  const onClose = () => {\r\n    onMobileNavToggle(false);\r\n  };\r\n\r\n  return (\r\n    <Drawer\r\n      placement=\"left\"\r\n      closable={false}\r\n      onClose={onClose}\r\n      visible={mobileNav}\r\n      bodyStyle={{ padding: 5 }}\r\n    >\r\n      <Flex flexDirection=\"column\" className=\"h-100\">\r\n        <Flex justifyContent=\"between\" alignItems=\"center\">\r\n          <Logo mobileLogo={true} />\r\n          <div className=\"nav-close\" onClick={() => onClose()}>\r\n            <ArrowLeftOutlined />\r\n          </div>\r\n        </Flex>\r\n        <div className=\"mobile-nav-menu\">\r\n          <Scrollbars autoHide>\r\n            <MenuContent type={NAV_TYPE_SIDE} {...props} />\r\n          </Scrollbars>\r\n        </div>\r\n      </Flex>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, sideNavTheme, mobileNav } = theme;\r\n  return { navCollapsed, sideNavTheme, mobileNav };\r\n};\r\n\r\nexport default connect(mapStateToProps, { onMobileNavToggle })(MobileNav);\r\n","import React, { useState } from 'react';\r\nimport { Menu, Dropdown, Badge, Avatar, List, Button } from 'antd';\r\nimport { \r\n  MailOutlined, \r\n  BellOutlined, \r\n  WarningOutlined,\r\n  CheckCircleOutlined\r\n} from '@ant-design/icons';\r\nimport notificationData from \"assets/data/notification.data.json\";\r\nimport Flex from 'components/shared-components/Flex'\r\n\r\nconst getIcon =  icon => {\r\n  switch (icon) {\r\n    case 'mail':\r\n      return <MailOutlined />;\r\n    case 'alert':\r\n      return <WarningOutlined />;\r\n    case 'check':\r\n      return <CheckCircleOutlined />\r\n    default:\r\n      return <MailOutlined />;\r\n  }\r\n}\r\n\r\nconst getNotificationBody = list => {\r\n  return list.length > 0 ?\r\n  <List\r\n    size=\"small\"\r\n    itemLayout=\"horizontal\"\r\n    dataSource={list}\r\n    renderItem={item => (\r\n      <List.Item className=\"list-clickable\">\r\n        <Flex alignItems=\"center\">\r\n          <div className=\"pr-3\">\r\n            {item.img? <Avatar src={`/img/avatars/${item.img}`} /> : <Avatar className={`ant-avatar-${item.type}`} icon={getIcon(item.icon)} />}\r\n          </div>\r\n          <div className=\"mr-3\">\r\n            <span className=\"font-weight-bold text-dark\">{item.name} </span>\r\n            <span className=\"text-gray-light\">{item.desc}</span>\r\n          </div>\r\n          <small className=\"ml-auto\">{item.time}</small>\r\n        </Flex>\r\n      </List.Item>\r\n    )}\r\n  />\r\n  :\r\n  <div className=\"empty-notification\">\r\n    <img src=\"https://gw.alipayobjects.com/zos/rmsportal/sAuJeJzSKbUmHfBQRzmZ.svg\" alt=\"empty\" />\r\n    <p className=\"mt-3\">You have viewed all notifications</p>\r\n  </div>;\r\n}\r\n\r\nexport const NavNotification = () => {\r\n\r\n  const [visible, setVisible] = useState(false);\r\n  const [data, setData] = useState(notificationData)\r\n\r\n  const handleVisibleChange = (flag) => {\r\n    setVisible(flag);\r\n  }\r\n\r\n  const notificationList = (\r\n    <div className=\"nav-dropdown nav-notification\">\r\n      <div className=\"nav-notification-header d-flex justify-content-between align-items-center\">\r\n        <h4 className=\"mb-0\">Notification</h4>\r\n        <Button className=\"text-primary\" type=\"text\" onClick={() => setData([])} size=\"small\">Clear </Button>\r\n      </div>\r\n      <div className=\"nav-notification-body\">\r\n        {getNotificationBody(data)}\r\n      </div>\r\n      {\r\n        data.length > 0 ? \r\n        <div className=\"nav-notification-footer\">\r\n          <a className=\"d-block\" href=\"#/\">View all</a>\r\n        </div>\r\n        :\r\n        null\r\n      }\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <Dropdown \r\n      placement=\"bottomRight\"\r\n      overlay={notificationList}\r\n      onVisibleChange={handleVisibleChange}\r\n      visible={visible}\r\n      trigger={['click']}\r\n    >\r\n      <Menu mode=\"horizontal\">\r\n        <Menu.Item key=\"notification\">\r\n          <Badge count={data.length}>\r\n            <BellOutlined className=\"nav-icon mx-auto\" type=\"bell\" />\r\n          </Badge>\r\n        </Menu.Item>\r\n      </Menu>\r\n    </Dropdown>\r\n  )\r\n}\r\n\r\n\r\nexport default NavNotification;\r\n","import React from \"react\";\r\nimport { Menu, Dropdown, Avatar } from \"antd\";\r\nimport { connect } from 'react-redux'\r\nimport { \r\n  EditOutlined, \r\n  SettingOutlined, \r\n  ShopOutlined, \r\n  QuestionCircleOutlined, \r\n  LogoutOutlined \r\n} from '@ant-design/icons';\r\nimport Icon from 'components/util-components/Icon';\r\nimport { signOut } from 'redux/actions/Auth';\r\n\r\nconst menuItem = [\r\n\t{\r\n\t\ttitle: \"Edit Profile\",\r\n\t\ticon: EditOutlined ,\r\n\t\tpath: \"/\"\r\n    },\r\n    \r\n    {\r\n\t\ttitle: \"Account Setting\",\r\n\t\ticon: SettingOutlined,\r\n\t\tpath: \"/\"\r\n    },\r\n    {\r\n\t\ttitle: \"Billing\",\r\n\t\ticon: ShopOutlined ,\r\n\t\tpath: \"/\"\r\n\t},\r\n    {\r\n\t\ttitle: \"Help Center\",\r\n\t\ticon: QuestionCircleOutlined,\r\n\t\tpath: \"/\"\r\n\t}\r\n]\r\n\r\nexport const NavProfile = ({signOut}) => {\r\n  const profileImg = \"/img/avatars/thumb-1.jpg\";\r\n  const profileMenu = (\r\n    <div className=\"nav-profile nav-dropdown\">\r\n      <div className=\"nav-profile-header\">\r\n        <div className=\"d-flex\">\r\n          <Avatar size={45} src={profileImg} />\r\n          <div className=\"pl-3\">\r\n            <h4 className=\"mb-0\">Charlie Howard</h4>\r\n            <span className=\"text-muted\">Frontend Developer</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"nav-profile-body\">\r\n        <Menu>\r\n          {menuItem.map((el, i) => {\r\n            return (\r\n              <Menu.Item key={i}>\r\n                <a href={el.path}>\r\n                  <Icon className=\"mr-3\" type={el.icon} />\r\n                  <span className=\"font-weight-normal\">{el.title}</span>\r\n                </a>\r\n              </Menu.Item>\r\n            );\r\n          })}\r\n          <Menu.Item key={menuItem.length + 1} onClick={e => signOut()}>\r\n            <span>\r\n              <LogoutOutlined className=\"mr-3\"/>\r\n              <span className=\"font-weight-normal\">Sign Out</span>\r\n            </span>\r\n          </Menu.Item>\r\n        </Menu>\r\n      </div>\r\n    </div>\r\n  );\r\n  return (\r\n    <Dropdown placement=\"bottomRight\" overlay={profileMenu} trigger={[\"click\"]}>\r\n      <Menu className=\"d-flex align-item-center\" mode=\"horizontal\">\r\n        <Menu.Item key=\"profile\">\r\n          <Avatar src={profileImg} />\r\n        </Menu.Item>\r\n      </Menu>\r\n    </Dropdown>\r\n  );\r\n}\r\n\r\nexport default connect(null, {signOut})(NavProfile)\r\n","import React from \"react\";\r\nimport { CheckOutlined, GlobalOutlined, DownOutlined  } from '@ant-design/icons';\r\nimport { Menu, Dropdown } from \"antd\";\r\nimport lang from \"assets/data/language.data.json\";\r\nimport { connect } from \"react-redux\";\r\nimport { onLocaleChange } from 'redux/actions/Theme'\r\n\r\nfunction getLanguageDetail (locale) {\r\n\tconst data = lang.filter(elm => (elm.langId === locale))\r\n\treturn data[0]\r\n}\r\n\r\nconst SelectedLanguage = ({ locale }) => {\r\n\tconst language = getLanguageDetail(locale)\r\n\tconst {langName, icon} = language\r\n\treturn (\r\n\t\t<div className=\"d-flex align-items-center\">\r\n\t\t\t<img style={{maxWidth: '20px'}} src={`/img/flags/${icon}.png`} alt={langName}/>\r\n\t\t\t<span className=\"font-weight-semibold ml-2\">{langName} <DownOutlined className=\"font-size-xs\"/></span>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport const NavLanguage = ({ locale, configDisplay, onLocaleChange }) => {\r\n\tconst languageOption = (\r\n\t\t<Menu>\r\n\t\t\t{\r\n\t\t\t\tlang.map((elm, i) => {return (\r\n\t\t\t\t\t<Menu.Item \r\n\t\t\t\t\t\tkey={elm.langName} \r\n\t\t\t\t\t\tclassName={locale === elm.langId? 'ant-dropdown-menu-item-active': ''} \r\n\t\t\t\t\t\tonClick={() => onLocaleChange(elm.langId)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<span className=\"d-flex justify-content-between align-items-center\">\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<img style={{maxWidth: '20px'}} src={`/img/flags/${elm.icon}.png`} alt={elm.langName}/>\r\n\t\t\t\t\t\t\t\t<span className=\"font-weight-normal ml-2\">{elm.langName}</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{locale === elm.langId? <CheckOutlined className=\"text-success\" /> : null}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t)})\r\n\t\t\t}\r\n\t\t</Menu>\r\n\t)\r\n\treturn (\r\n\t\t<Dropdown placement=\"bottomRight\" overlay={languageOption} trigger={[\"click\"]}>\r\n\t\t\t{\r\n\t\t\t\tconfigDisplay ?\r\n\t\t\t\t(\r\n\t\t\t\t\t<a href=\"#/\" className=\"text-gray\" onClick={e => e.preventDefault()}>\r\n\t\t\t\t\t\t<SelectedLanguage locale={locale}/>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t)\r\n\t\t\t\t:\r\n\t\t\t\t(\r\n\t\t\t\t\t<Menu mode=\"horizontal\">\r\n\t\t\t\t\t\t<Menu.Item key=\"language\">\r\n\t\t\t\t\t\t\t<a href=\"#/\" onClick={e => e.preventDefault()}>\r\n\t\t\t\t\t\t\t\t<GlobalOutlined className=\"nav-icon mr-0\" />\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t\t</Menu>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t</Dropdown>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { locale } =  theme;\r\n  return { locale }\r\n};\r\n\r\nexport default connect(mapStateToProps, {onLocaleChange})(NavLanguage);\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { SketchPicker } from 'react-color';\r\n\r\nconst ColorPicker = props => {\r\n\r\n\tconst { colorChange, color='' } = props\r\n\r\n\tconst [visible, setVisible] = useState(false);\r\n\tconst [pickerColor, setPickerColor] = useState(color)\r\n\tconst [boxColor, setBoxColor] = useState(color)\r\n\r\n\tuseEffect(() => {\r\n\t\tsetBoxColor(color);\r\n\t\tsetPickerColor(color)\r\n\t}, [color]);\r\n\r\n\tconst onPickerDropdown = () => {\r\n\t\tsetVisible(!visible)\r\n\t}\r\n\r\n\tconst onColorChange = (value) => {\r\n\t\tconst {rgb} = value\r\n\t\tconst rgba = `rgb(${rgb.r}, ${rgb.g}, ${rgb.b}, ${rgb.a})`\r\n\t\tsetBoxColor(rgba)\r\n\t\tsetPickerColor(rgb)\r\n\t\tcolorChange(value)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"color-picker\">\r\n\t\t\t<div className=\"color-picker-dropdown\">\r\n\t\t\t\t<div className=\"color\" style={{backgroundColor: boxColor ? boxColor : '#ffffff'}} onClick={onPickerDropdown} />\r\n\t\t\t</div>\r\n\t\t\t{\r\n\t\t\t\tvisible && (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<div className=\"color-picker-backdrop\" onClick={onPickerDropdown}/>\r\n\t\t\t\t\t\t<SketchPicker color={pickerColor} onChange={onColorChange}/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nColorPicker.propTypes = {\r\n\tcolor: PropTypes.string,\r\n\tcolorChange: PropTypes.func\r\n}\r\n\r\n\r\nexport default ColorPicker;\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Radio, Switch, Button, message } from 'antd';\r\nimport { \r\n\ttoggleCollapsedNav, \r\n\tonNavTypeChange,\r\n\tonNavStyleChange,\r\n\tonTopNavColorChange,\r\n\tonHeaderNavColorChange,\r\n\tonSwitchTheme,\r\n\tonDirectionChange\r\n} from 'redux/actions/Theme';\r\nimport { CopyOutlined } from '@ant-design/icons';\r\nimport ColorPicker from 'components/shared-components/ColorPicker';\r\nimport CopyToClipboard from 'react-copy-to-clipboard';\r\nimport NavLanguage from './NavLanguage';\r\nimport { \r\n\tSIDE_NAV_LIGHT,\r\n\tNAV_TYPE_SIDE,\r\n\tNAV_TYPE_TOP,\r\n\tSIDE_NAV_DARK,\r\n\tDIR_RTL,\r\n\tDIR_LTR\r\n} from 'constants/ThemeConstant';\r\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\r\nimport utils from 'utils/index';\r\n\r\nconst colorOptions = [\r\n\t'#3e82f7',\r\n\t'#24a772',\r\n\t'#de4436',\r\n\t'#924aca',\r\n\t'#193550'\r\n]\r\n\r\nconst ListOption = ({name, selector, disabled, vertical}) => (\r\n\t<div className={`my-4 ${vertical? '' : 'd-flex align-items-center justify-content-between'}`}>\r\n\t\t<div className={`${disabled ? 'opacity-0-3' : ''} ${vertical? 'mb-3' : ''}`}>{name}</div>\r\n\t\t<div>{selector}</div>\r\n\t</div>\r\n)\r\n\r\nexport const ThemeConfigurator = ({ \r\n\tnavType, \r\n\tsideNavTheme, \r\n\tnavCollapsed,\r\n\ttopNavColor,\r\n\theaderNavColor,\r\n\tlocale,\r\n\tcurrentTheme,\r\n\ttoggleCollapsedNav, \r\n\tonNavTypeChange, \r\n\tonNavStyleChange,\r\n\tonTopNavColorChange,\r\n\tonHeaderNavColorChange,\r\n\tonSwitchTheme,\r\n\tdirection,\r\n\tonDirectionChange\r\n}) => {\r\n\tconst isNavTop = navType === NAV_TYPE_TOP? true : false\r\n\tconst isCollapse = navCollapsed \r\n\r\n\tconst { switcher, themes } = useThemeSwitcher();\r\n\r\n\tconst toggleTheme = (isChecked) => {\r\n\t\tonHeaderNavColorChange('')\r\n\t\tconst changedTheme = isChecked ? 'dark' : 'light'\r\n\t\tonSwitchTheme(changedTheme)\r\n    switcher({ theme: themes[changedTheme] });\r\n  };\r\n\r\n\tconst ontopNavColorClick = (value) => {\r\n\t\tonHeaderNavColorChange('')\r\n\t\tconst { rgb } = value\r\n\t\tconst rgba = `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, ${rgb.a})`\r\n\t\tconst hex = utils.rgbaToHex(rgba)\r\n\t\tonTopNavColorChange(hex)\r\n\t}\r\n\tconst onHeaderNavColorClick = (value) => {\r\n\t\tconst { rgb } = value\r\n\t\tconst rgba = `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, ${rgb.a})`\r\n\t\tconst hex = utils.rgbaToHex(rgba)\r\n\t\tonHeaderNavColorChange(hex)\r\n\t}\r\n\r\n\tconst onNavTypeClick = (value) => {\r\n\t\tonHeaderNavColorChange('')\r\n\t\tif(value === NAV_TYPE_TOP) {\r\n\t\t\tonTopNavColorChange(colorOptions[0])\r\n\t\t\ttoggleCollapsedNav(false)\r\n\t\t}\r\n\t\tonNavTypeChange(value)\r\n\t}\r\n\r\n\tconst genCopySettingJson = (configState) => JSON.stringify(configState, null, 2);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"mb-5\">\r\n\t\t\t\t<h4 className=\"mb-3 font-weight-bold\">Navigation</h4>\r\n\t\t\t\t{\r\n\t\t\t\t\tisNavTop ?\r\n\t\t\t\t\t<ListOption \r\n\t\t\t\t\t\tname=\"Top Nav Color:\"\r\n\t\t\t\t\t\tvertical\r\n\t\t\t\t\t\tselector={\r\n\t\t\t\t\t\t\t<ColorPicker color={topNavColor} colorChange={ontopNavColorClick}/>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t:\r\n\t\t\t\t\t<ListOption \r\n\t\t\t\t\t\tname=\"Header Nav Color:\"\r\n\t\t\t\t\t\tvertical\r\n\t\t\t\t\t\tselector={\r\n\t\t\t\t\t\t\t<ColorPicker color={headerNavColor} colorChange={onHeaderNavColorClick}/>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Navigation Type:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<Radio.Group \r\n\t\t\t\t\t\t\tsize=\"small\" \r\n\t\t\t\t\t\t\tonChange={e => onNavTypeClick(e.target.value)} \r\n\t\t\t\t\t\t\tvalue={navType}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Radio.Button value={NAV_TYPE_SIDE}>Side</Radio.Button>\r\n\t\t\t\t\t\t\t<Radio.Button value={NAV_TYPE_TOP}>Top</Radio.Button>\r\n\t\t\t\t\t\t</Radio.Group>\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Side Nav Color:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<Radio.Group\r\n\t\t\t\t\t\t\tdisabled={isNavTop}\r\n\t\t\t\t\t\t\tsize=\"small\" \r\n\t\t\t\t\t\t\tonChange={e => onNavStyleChange(e.target.value)} \r\n\t\t\t\t\t\t\tvalue={sideNavTheme}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Radio.Button value={SIDE_NAV_LIGHT}>Light</Radio.Button>\r\n\t\t\t\t\t\t\t<Radio.Button value={SIDE_NAV_DARK}>Dark</Radio.Button>\r\n\t\t\t\t\t\t</Radio.Group>\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdisabled={isNavTop}\r\n\t\t\t\t/>\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Side Nav Collapse:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<Switch \r\n\t\t\t\t\t\t\tdisabled={isNavTop} \r\n\t\t\t\t\t\t\tchecked={isCollapse} \r\n\t\t\t\t\t\t\tonChange={() => toggleCollapsedNav(!navCollapsed)} \r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdisabled={isNavTop}\r\n\t\t\t\t/>\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Dark Theme:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<Switch checked={currentTheme === 'dark'} onChange={toggleTheme} />\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Direction:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<Radio.Group\r\n\t\t\t\t\t\t\tsize=\"small\" \r\n\t\t\t\t\t\t\tonChange={e => onDirectionChange(e.target.value)} \r\n\t\t\t\t\t\t\tvalue={direction}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Radio.Button value={DIR_LTR}>LTR</Radio.Button>\r\n\t\t\t\t\t\t\t<Radio.Button value={DIR_RTL}>RTL</Radio.Button>\r\n\t\t\t\t\t\t</Radio.Group>\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"mb-5\">\r\n\t\t\t\t<h4 className=\"mb-3 font-weight-bold\">Locale</h4>\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Language:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<NavLanguage configDisplay/>\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<CopyToClipboard\r\n\t\t\t\t\ttext={genCopySettingJson({ navType, sideNavTheme, navCollapsed, topNavColor, headerNavColor, locale, currentTheme, direction})}\r\n\t\t\t\t\tonCopy={() => message.success('Copy Success, please paste it to src/configs/AppConfig.js THEME_CONFIG variable.') }\r\n\t\t\t\t>\r\n\t\t\t\t\t<Button icon={<CopyOutlined /> } block>\r\n\t\t\t\t\t\t<span>Copy Setting</span>\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</CopyToClipboard>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navType, sideNavTheme, navCollapsed, topNavColor, headerNavColor, locale, currentTheme, direction } =  theme;\r\n  return { navType, sideNavTheme, navCollapsed, topNavColor, headerNavColor, locale, currentTheme, direction }\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n\ttoggleCollapsedNav,\r\n\tonNavTypeChange,\r\n\tonNavStyleChange,\r\n\tonTopNavColorChange,\r\n\tonHeaderNavColorChange,\r\n\tonSwitchTheme,\r\n\tonDirectionChange\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ThemeConfigurator)\r\n","import React, { Component } from 'react';\r\nimport { SettingOutlined } from '@ant-design/icons';\r\nimport { Drawer, Menu } from 'antd';\r\nimport ThemeConfigurator from './ThemeConfigurator';\r\nimport { connect } from \"react-redux\";\r\nimport { DIR_RTL } from 'constants/ThemeConstant';\r\n\r\nexport class NavPanel extends Component {\r\n\tstate = { visible: false };\r\n\r\n  showDrawer = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  onClose = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n\t};\r\n\t\r\n\trender() {\r\n\t\treturn (\r\n      <>\r\n        <Menu mode=\"horizontal\">\r\n          <Menu.Item key=\"panel\" onClick={this.showDrawer}>\r\n            <a href={void(0)}><SettingOutlined className=\"nav-icon mr-0\" /></a>\r\n          </Menu.Item>\r\n        </Menu>\r\n        <Drawer\r\n          title=\"Theme Config\"\r\n          placement={this.props.direction === DIR_RTL ? 'left' : 'right'} \r\n          width={350}\r\n          onClose={this.onClose}\r\n          visible={this.state.visible}\r\n        >\r\n          <ThemeConfigurator/>\r\n        </Drawer>\r\n      </>\r\n    );\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { locale } =  theme;\r\n  return { locale }\r\n};\r\n\r\nexport default connect(mapStateToProps)(NavPanel);","import React, { useState, useRef } from 'react';\r\nimport { \r\n\tDashboardOutlined,\r\n\tAppstoreOutlined,\r\n\tAntDesignOutlined,\r\n\tFileTextOutlined,\r\n\tSearchOutlined\r\n} from '@ant-design/icons';\r\nimport { Link } from \"react-router-dom\";\r\nimport { AutoComplete, Input } from 'antd';\r\nimport IntlMessage from 'components/util-components/IntlMessage';\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\n\r\nfunction getOptionList (navigationTree, optionTree) {\r\n\toptionTree = optionTree ? optionTree : [];\r\n\tfor ( const navItem of navigationTree ) {\r\n\t\tif(navItem.submenu.length === 0) {\r\n\t\t\toptionTree.push(navItem)\r\n\t\t}\r\n\t\tif(navItem.submenu.length > 0) {\r\n\t\t\tgetOptionList(navItem.submenu, optionTree);\r\n\t\t}\r\n\t}\r\n\treturn optionTree \r\n}\r\n\r\nconst optionList = getOptionList(navigationConfig)\r\n\r\nconst getCategoryIcon = category => {\r\n\tswitch (category) {\r\n\t\tcase 'dashboards':\r\n\t\t\treturn <DashboardOutlined className=\"text-success\"/>;\r\n\t\tcase 'apps':\r\n\t\t\treturn <AppstoreOutlined className=\"text-danger\"/>;\r\n\t\tcase 'components':\r\n\t\t\treturn <AntDesignOutlined className=\"text-primary\"/>;\r\n\t\tcase 'extra':\r\n\t\t\treturn <FileTextOutlined className=\"text-warning\"/>;\r\n\t\tdefault:\r\n\t\t\treturn null;\r\n\t}\r\n}\r\n\r\nconst searchResult = () => optionList.map((item) => {\r\n\tconst category = item.key.split('-')[0]\r\n\treturn {\r\n\t\tvalue: item.path,\r\n\t\tlabel: (\r\n\t\t\t<Link to={item.path}>\r\n\t\t\t\t<div className=\"search-list-item\">\r\n\t\t\t\t\t<div className=\"icon\">\r\n\t\t\t\t\t\t{getCategoryIcon(category)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<div className=\"font-weight-semibold\"><IntlMessage id={item.title} /></div>\r\n\t\t\t\t\t\t<div className=\"font-size-sm text-muted\">{category} </div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</Link>\r\n\t\t),\r\n\t};\r\n});\r\n\r\nconst SearchInput = props => {\r\n\tconst { active, close, isMobile, mode } = props\r\n\tconst [value, setValue] = useState('');\r\n\tconst [options, setOptions] = useState([])\r\n\tconst inputRef = useRef(null);\r\n\r\n\tconst onSelect = () => {\r\n\t\tsetValue('')\r\n\t\tsetOptions([])\r\n\t\tif(close) {\r\n\t\t\tclose()\r\n\t\t}\r\n  };\r\n\r\n\tconst onSearch = searchText => {\r\n\t\tsetValue(searchText)\r\n\t\tsetOptions(!searchText ? [] : searchResult(searchText))\r\n\t};\r\n\t\r\n\tconst autofocus = () => {\r\n\t\tinputRef.current.focus();\r\n\t}\r\n\r\n\tif(active) {\r\n\t\tautofocus()\r\n\t}\r\n\r\n\treturn (\r\n\t\t<AutoComplete\r\n\t\t\tref={inputRef} \r\n\t\t\tclassName={`nav-search-input ${isMobile? 'is-mobile' : ''} ${mode === 'light' ? 'light' : ''}`}\r\n\t\t\tdropdownClassName=\"nav-search-dropdown\"\r\n\t\t\toptions={options}\r\n\t\t\tonSelect={onSelect}\r\n\t\t\tonSearch={onSearch}\r\n\t\t\tvalue={value}\r\n\t\t\tfilterOption={(inputValue, option) => \r\n\t\t\t\toption.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t<Input placeholder=\"Search...\"  prefix={<SearchOutlined className=\"mr-0\" />} />\r\n\t\t</AutoComplete>\r\n\t)\r\n}\r\n\r\nexport default SearchInput\r\n","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n\tCloseOutlined,\r\n} from '@ant-design/icons';\r\nimport utils from 'utils'\r\nimport SearchInput from './SearchInput';\r\n\r\nexport const NavSearch = (props) => {\r\n\tconst { active, close, headerNavColor } = props\r\n\tconst mode = utils.getColorContrast(headerNavColor)\r\n\r\n\treturn (\r\n\t\t<div className={`nav-search ${active ? 'nav-search-active' : ''} ${mode}`} style={{backgroundColor: headerNavColor}}>\r\n\t\t\t<div className=\"d-flex align-items-center w-100\">\r\n\t\t\t\t<SearchInput close={close} active={active}/>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"nav-close\" onClick={close}>\r\n\t\t\t\t<CloseOutlined />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { headerNavColor } =  theme;\r\n  return { headerNavColor }\r\n};\r\n\r\nexport default connect(mapStateToProps, {})(NavSearch)","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Layout } from \"antd\";\r\nimport { MenuFoldOutlined, MenuUnfoldOutlined, SearchOutlined } from '@ant-design/icons';\r\nimport Logo from './Logo';\r\nimport NavNotification from './NavNotification';\r\nimport NavProfile from './NavProfile';\r\nimport NavLanguage from './NavLanguage';\r\nimport NavPanel from './NavPanel';\r\nimport NavSearch  from './NavSearch';\r\nimport SearchInput from './NavSearch/SearchInput.js'\r\nimport { toggleCollapsedNav, onMobileNavToggle } from 'redux/actions/Theme';\r\nimport { NAV_TYPE_TOP, SIDE_NAV_COLLAPSED_WIDTH, SIDE_NAV_WIDTH } from 'constants/ThemeConstant';\r\nimport utils from 'utils'\r\nimport { useHistory } from \"react-router-dom\";\r\nconst { Header } = Layout;\r\n\r\nexport const HeaderNav = props => {\r\n  let history = useHistory();\r\n  const { navCollapsed, mobileNav, navType, headerNavColor, toggleCollapsedNav, onMobileNavToggle, isMobile, currentTheme, direction } = props;\r\n  const [searchActive, setSearchActive] = useState(false)\r\n\r\n  const onSearchActive = () => {\r\n    setSearchActive(true)\r\n  }\r\n\r\n  const onSearchClose = () => {\r\n    setSearchActive(false)\r\n  }\r\n\r\n  const onToggle = () => {\r\n    if(!isMobile) {\r\n      toggleCollapsedNav(!navCollapsed)\r\n    } else {\r\n      onMobileNavToggle(!mobileNav)\r\n    }\r\n  }\r\n\r\n  const onBack = () => {\r\n    history.push(`/app`)\r\n  }\r\n\r\n  const isNavTop = navType === NAV_TYPE_TOP ? true : false\r\n  const mode = ()=> {\r\n    if(!headerNavColor) {\r\n      return utils.getColorContrast(currentTheme === 'dark' ? '#00000' : '#ffffff' )\r\n    }\r\n    return utils.getColorContrast(headerNavColor)\r\n  }\r\n  const navMode = mode()\r\n  const getNavWidth = () => {\r\n    if(isNavTop || isMobile) {\r\n      return '0px'\r\n    }\r\n    if(navCollapsed) {\r\n      return `${SIDE_NAV_COLLAPSED_WIDTH}px`\r\n    } else {\r\n      return `${SIDE_NAV_WIDTH}px`\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(!isMobile) {\r\n      onSearchClose()\r\n    }\r\n  })\r\n  \r\n  return (\r\n    <Header className={`app-header ${navMode}`} style={{backgroundColor: headerNavColor}}>\r\n      <div className={`app-header-wrapper ${isNavTop ? 'layout-top-nav' : ''}`}>\r\n        <Logo logoType={navMode}/>\r\n        <div className=\"nav\" style={{width: `calc(100% - ${getNavWidth()})`}}>\r\n          <div className=\"nav-left\">\r\n            <ul className=\"ant-menu ant-menu-root ant-menu-horizontal\">          \r\n              {\r\n                isNavTop && !isMobile ?\r\n                null\r\n                :\r\n                <li className=\"ant-menu-item ant-menu-item-only-child\" onClick={() => {onToggle()}}>\r\n                  {navCollapsed || isMobile ? <MenuUnfoldOutlined className=\"nav-icon\" /> : <MenuFoldOutlined className=\"nav-icon\" />}\r\n                </li>\r\n              }\r\n                <li className=\"ant-menu-item ant-menu-item-only-child st\" onClick={() => {onBack()}}>\r\n                <div className=\"large-text\" style={{fontSize: '16px', fontWeight: 'bold'}}>STUDENT MANAGEMENT</div>\r\n                </li>\r\n              {\r\n                isMobile ?\r\n                <li className=\"ant-menu-item ant-menu-item-only-child\" onClick={() => {onSearchActive()}}>\r\n                  <SearchOutlined />\r\n                </li>\r\n                :\r\n                <li className=\"ant-menu-item ant-menu-item-only-child\" style={{cursor: 'auto'}}>\r\n                  <SearchInput mode={mode} isMobile={isMobile} />\r\n                </li>\r\n              }\r\n            </ul>\r\n          </div>\r\n          <div className=\"nav-right\">\r\n            <NavNotification />\r\n            <NavLanguage />\r\n            <NavProfile />\r\n            <NavPanel direction={direction} />\r\n          </div>\r\n          <NavSearch active={searchActive} close={onSearchClose}/>\r\n        </div>\r\n      </div>\r\n    </Header>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, navType, headerNavColor, mobileNav, currentTheme, direction } =  theme;\r\n  return { navCollapsed, navType, headerNavColor, mobileNav, currentTheme, direction }\r\n};\r\n\r\nexport default connect(mapStateToProps, {toggleCollapsedNav, onMobileNavToggle})(HeaderNav);","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Breadcrumb } from 'antd';\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\nimport IntlMessage from 'components/util-components/IntlMessage';\r\n\r\nlet breadcrumbData = { \r\n\t'/app' : <IntlMessage id=\"home\" />\r\n};\r\n\r\nnavigationConfig.forEach((elm, i) => {\r\n\tconst assignBreadcrumb = (obj) => breadcrumbData[obj.path] = <IntlMessage id={obj.title} />;\r\n\tassignBreadcrumb(elm);\r\n\tif (elm.submenu) {\r\n\t\telm.submenu.forEach( elm => {\r\n\t\t\tassignBreadcrumb(elm)\r\n\t\t\tif(elm.submenu) {\r\n\t\t\t\telm.submenu.forEach( elm => {\r\n\t\t\t\t\tassignBreadcrumb(elm)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n})\r\n\r\nconst BreadcrumbRoute = withRouter(props => {\r\n\tconst { location } = props;\r\n\tconst pathSnippets = location.pathname.split('/').filter(i => i);\r\n\tconst buildBreadcrumb = pathSnippets.map((_, index) => {\r\n    const url = `/${pathSnippets.slice(0, index + 1).join('/')}`;\r\n    return (\r\n      <Breadcrumb.Item key={url}>\r\n        <Link to={url}>{breadcrumbData[url]}</Link>\r\n      </Breadcrumb.Item>\r\n    );\r\n\t});\r\n  \r\n  return (\r\n\t\t<Breadcrumb>\r\n\t\t\t{buildBreadcrumb}\r\n\t\t</Breadcrumb>\r\n  );\r\n});\r\n\r\nexport class AppBreadcrumb extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<BreadcrumbRoute />\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default AppBreadcrumb\r\n","import React from 'react'\r\nimport AppBreadcrumb from 'components/layout-components/AppBreadcrumb';\r\nimport IntlMessage from '../util-components/IntlMessage';\r\n\r\nexport const PageHeader = ({ title, display }) => {\r\n\treturn (\r\n\t\tdisplay ? (\r\n\t\t\t<div className=\"app-page-header\">\r\n\t\t\t\t<h3 className=\"mb-0 mr-3 font-weight-semibold\">\r\n\t\t\t\t\t<IntlMessage id={title? title : 'home'}/>\r\n\t\t\t\t</h3>\r\n\t\t\t\t<AppBreadcrumb />\r\n\t\t\t</div>\r\n\t\t)\r\n\t\t: null\r\n\t)\r\n}\r\n\r\nexport default PageHeader","import React from 'react'\r\nimport { APP_NAME } from 'configs/AppConfig';\r\n\r\nexport default function Footer() {\r\n\treturn (\r\n\t\t<footer className=\"footer\">\r\n\t\t\t<span>Copyright  &copy;  {`${new Date().getFullYear()}`} <span className=\"font-weight-semibold\">{`${APP_NAME}`}</span> All rights reserved.</span>\r\n\t\t\t<div>\r\n\t\t\t\t<a className=\"text-gray\" href=\"/#\" onClick={e => e.preventDefault()}>Term & Conditions</a>\r\n\t\t\t\t<span className=\"mx-2 text-muted\"> | </span>\r\n\t\t\t\t<a className=\"text-gray\" href=\"/#\" onClick={e => e.preventDefault()}>Privacy & Policy</a>\r\n\t\t\t</div>\r\n\t\t</footer>\r\n\t)\r\n}\r\n\r\n","import React, { lazy, Suspense } from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport Loading from 'components/shared-components/Loading';\r\nimport { APP_PREFIX_PATH } from 'configs/AppConfig'\r\n\r\nexport const AppViews = () => {\r\n  return (\r\n    <Suspense fallback={<Loading cover=\"content\"/>}>\r\n      <Switch>\r\n        <Route path={`${APP_PREFIX_PATH}/apps`} component={lazy(() => import(`./apps`))} />\r\n        <Redirect from={`${APP_PREFIX_PATH}`} to={`${APP_PREFIX_PATH}/apps/classes`} />\r\n      </Switch>\r\n    </Suspense>\r\n  )\r\n}\r\n\r\nexport default React.memo(AppViews);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport SideNav from 'components/layout-components/SideNav';\r\nimport TopNav from 'components/layout-components/TopNav';\r\nimport Loading from 'components/shared-components/Loading';\r\nimport MobileNav from 'components/layout-components/MobileNav'\r\nimport HeaderNav from 'components/layout-components/HeaderNav';\r\nimport PageHeader from 'components/layout-components/PageHeader';\r\nimport Footer from 'components/layout-components/Footer';\r\nimport AppViews from 'views/app-views';\r\nimport {\r\n  Layout,\r\n  Grid,\r\n} from \"antd\";\r\n\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\nimport { \r\n  SIDE_NAV_WIDTH, \r\n  SIDE_NAV_COLLAPSED_WIDTH,\r\n  NAV_TYPE_SIDE,\r\n  NAV_TYPE_TOP,\r\n  DIR_RTL,\r\n  DIR_LTR\r\n} from 'constants/ThemeConstant';\r\nimport utils from 'utils';\r\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\r\n\r\nconst { Content } = Layout;\r\nconst { useBreakpoint } = Grid;\r\n\r\nexport const AppLayout = ({ navCollapsed, navType, location, direction }) => {\r\n  const currentRouteInfo = utils.getRouteInfo(navigationConfig, location.pathname)\r\n  const screens = utils.getBreakPoint(useBreakpoint());\r\n  const isMobile = screens.length === 0 ? false : !screens.includes('lg')\r\n  const isNavSide = navType === NAV_TYPE_SIDE\r\n  const isNavTop = navType === NAV_TYPE_TOP\r\n  const getLayoutGutter = () => {\r\n    if(isNavTop || isMobile) {\r\n      return 0\r\n    }\r\n    return navCollapsed ? SIDE_NAV_COLLAPSED_WIDTH : SIDE_NAV_WIDTH\r\n  }\r\n\r\n  const { status } = useThemeSwitcher();\r\n\r\n  if (status === 'loading') {\r\n    return <Loading cover=\"page\" />;\r\n  }\r\n\r\n  const getLayoutDirectionGutter = () => {\r\n    if(direction === DIR_LTR) {\r\n      return {paddingLeft: getLayoutGutter()}\r\n    }  \r\n    if(direction === DIR_RTL) {\r\n      return {paddingRight: getLayoutGutter()}\r\n    }\r\n    return {paddingLeft: getLayoutGutter()}\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <HeaderNav isMobile={isMobile}/>\r\n      {(isNavTop && !isMobile) ? <TopNav routeInfo={currentRouteInfo}/> : null}\r\n      <Layout className=\"app-container\">\r\n        {(isNavSide && !isMobile) ? <SideNav routeInfo={currentRouteInfo}/> : null }\r\n        <Layout className=\"app-layout\" style={getLayoutDirectionGutter()}>\r\n          <div className={`app-content ${isNavTop ? 'layout-top-nav' : ''}`}>\r\n            <PageHeader display={currentRouteInfo?.breadcrumb} title={currentRouteInfo?.title} />\r\n            <Content>\r\n              <AppViews />\r\n            </Content>\r\n          </div>\r\n          <Footer />\r\n        </Layout>\r\n      </Layout>\r\n      {isMobile && <MobileNav />}\r\n    </Layout>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, navType, locale } =  theme;\r\n  return { navCollapsed, navType, locale }\r\n};\r\n\r\nexport default connect(mapStateToProps)(React.memo(AppLayout));","import React, { lazy, Suspense } from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport Loading from 'components/shared-components/Loading';\r\nimport { AUTH_PREFIX_PATH } from 'configs/AppConfig'\r\n\r\nexport const AppViews = () => {\r\n  return (\r\n    <Suspense fallback={<Loading cover=\"page\"/>}>\r\n      <Switch>\r\n        <Route path={`${AUTH_PREFIX_PATH}/login`} component={lazy(() => import(`./authentication/login`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/login-1`} component={lazy(() => import(`./authentication/login-1`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/login-2`} component={lazy(() => import(`./authentication/login-2`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/register-1`} component={lazy(() => import(`./authentication/register-1`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/register-2`} component={lazy(() => import(`./authentication/register-2`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/forgot-password`} component={lazy(() => import(`./authentication/forgot-password`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/error-1`} component={lazy(() => import(`./errors/error-page-1`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/error-2`} component={lazy(() => import(`./errors/error-page-2`))} />\r\n        <Redirect from={`${AUTH_PREFIX_PATH}`} to={`${AUTH_PREFIX_PATH}/login`} />\r\n      </Switch>\r\n    </Suspense>\r\n  )\r\n}\r\n\r\nexport default AppViews;\r\n\r\n","import React from 'react'\r\nimport { Switch, Route, } from \"react-router-dom\";\r\nimport AuthViews from 'views/auth-views';\r\nimport Loading from 'components/shared-components/Loading';\r\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\r\n\r\nexport const AuthLayout = () => {\r\n\tconst { status } = useThemeSwitcher();\r\n\r\n  if (status === 'loading') {\r\n    return <Loading cover=\"page\" />;\r\n  }\r\n\r\n\treturn (\r\n\t\t<div className=\"auth-container\">\r\n\t\t\t<Switch>\r\n\t\t\t\t<Route path=\"\" component={AuthViews} />\r\n\t\t\t</Switch>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n\r\nexport default AuthLayout\r\n","import antdEnUS from 'antd/es/locale/en_US';\r\nimport enMsg from \"../locales/en_US.json\";\r\n\r\nconst EnLang = {\r\n  antd: antdEnUS,\r\n  locale: 'en-US',\r\n  messages: {\r\n    ...enMsg\r\n  },\r\n};\r\nexport default EnLang;\r\n","import antdZhCn from 'antd/es/locale/zh_CN';\r\nimport zhMsg from \"../locales/zh_CN.json\";\r\n\r\nconst ZhLang = {\r\n  antd: antdZhCn,\r\n  locale: 'zh',\r\n  messages: {\r\n    ...zhMsg\r\n  },\r\n};\r\nexport default ZhLang;\r\n","import antdFrFR from 'antd/es/locale/fr_FR';\r\nimport frMsg from \"../locales/fr_FR.json\";\r\n\r\nconst FrLang = {\r\n  antd: antdFrFR,\r\n  locale: 'fr-FR',\r\n  messages: {\r\n    ...frMsg\r\n  },\r\n};\r\nexport default FrLang;\r\n","import enLang from './entries/en_US';\r\nimport zhLang from './entries/zh_CN';\r\nimport frLang from './entries/fr_FR';\r\nimport jaLang from './entries/ja_JP'\r\n\r\nconst AppLocale = {\r\n    en: enLang,\r\n    zh: zhLang,\r\n    fr: frLang,\r\n    ja: jaLang\r\n};\r\n\r\nexport default AppLocale;","import antdJaJP from 'antd/es/locale/ja_JP';\r\nimport jaMsg from \"../locales/ja_JP.json\";\r\n\r\nconst JaLang = {\r\n  antd: antdJaJP,\r\n  locale: 'ja-JP',\r\n  messages: {\r\n    ...jaMsg\r\n  },\r\n};\r\nexport default JaLang;\r\n","import {useEffect} from 'react';\r\n\r\nconst addBodyClass = className => document.body.classList.add(className);\r\nconst removeBodyClass = className => document.body.classList.remove(className);\r\n\r\nexport default function useBodyClass(className) {\r\n    useEffect(\r\n\t\t() => {\r\n\t\t\t// Set up\r\n\t\t\tclassName instanceof Array ? className.map(addBodyClass) : addBodyClass(className);\r\n\r\n\t\t\t// Clean up\r\n\t\t\treturn () => {\r\n\t\t\t\t\tclassName instanceof Array ? className.map(removeBodyClass) : removeBodyClass(className);\r\n\t\t\t};\r\n\t\t},\r\n\t\t[className]\r\n    );\r\n}","import React from \"react\";\r\nimport { Route, Switch, Redirect, withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport AppLayout from \"layouts/app-layout\";\r\nimport AuthLayout from 'layouts/auth-layout';\r\nimport AppLocale from \"lang\";\r\nimport { IntlProvider } from \"react-intl\";\r\nimport { ConfigProvider } from 'antd';\r\nimport { APP_PREFIX_PATH, AUTH_PREFIX_PATH } from 'configs/AppConfig'\r\nimport useBodyClass from 'hooks/useBodyClass';\r\n\r\nfunction RouteInterceptor({ children, isAuthenticated, ...rest }) {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={({ location }) =>\r\n        isAuthenticated ? (\r\n          children\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: AUTH_PREFIX_PATH,\r\n              state: { from: location }\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport const Views = (props) => {\r\n  const { locale, token, location, direction } = props;\r\n  const currentAppLocale = AppLocale[locale];\r\n  useBodyClass(`dir-${direction}`);\r\n  return (\r\n    <IntlProvider\r\n      locale={currentAppLocale.locale}\r\n      messages={currentAppLocale.messages}>\r\n      <ConfigProvider locale={currentAppLocale.antd} direction={direction}>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Redirect to={APP_PREFIX_PATH} />\r\n          </Route>\r\n          <Route path={AUTH_PREFIX_PATH}>\r\n            <AuthLayout direction={direction} />\r\n          </Route>\r\n          <RouteInterceptor path={APP_PREFIX_PATH} isAuthenticated={token}>\r\n            <AppLayout direction={direction} location={location}/>\r\n          </RouteInterceptor>\r\n        </Switch>\r\n      </ConfigProvider>\r\n    </IntlProvider>\r\n  )\r\n}\r\n\r\n\r\nconst mapStateToProps = ({ theme, auth }) => {\r\n  const { locale, direction } =  theme;\r\n  const { token } = auth;\r\n  return { locale, direction, token }\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps)(Views));","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport Views from './views';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { ThemeSwitcherProvider } from \"react-css-theme-switcher\";\r\nimport { THEME_CONFIG } from './configs/AppConfig';\r\n\r\nconst themes = {\r\n  dark: `${process.env.PUBLIC_URL}/css/dark-theme.css`,\r\n  light: `${process.env.PUBLIC_URL}/css/light-theme.css`,\r\n};\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Provider store={store}>\r\n        <ThemeSwitcherProvider themeMap={themes} defaultTheme={THEME_CONFIG.currentTheme} insertionPoint=\"styles-insertion-point\">\r\n          <Router>\r\n            <Switch>\r\n              <Route path=\"/\" component={Views}/>\r\n            </Switch>\r\n          </Router>\r\n        </ThemeSwitcherProvider>\r\n      </Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './index.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import {\r\n  SIGNIN,\r\n  AUTHENTICATED,\r\n  SIGNOUT,\r\n  SIGNOUT_SUCCESS,\r\n  SHOW_AUTH_MESSAGE,\r\n  HIDE_AUTH_MESSAGE,\r\n  SIGNUP,\r\n  SIGNUP_SUCCESS,\r\n  SHOW_LOADING,\r\n  SIGNIN_WITH_GOOGLE,\r\n  SIGNIN_WITH_GOOGLE_AUTHENTICATED,\r\n  SIGNIN_WITH_FACEBOOK,\r\n  SIGNIN_WITH_FACEBOOK_AUTHENTICATED\r\n} from '../constants/Auth';\r\n\r\nexport const signIn = (user) => {\r\n  return {\r\n    type: SIGNIN,\r\n    payload: user\r\n  }\r\n};\r\n\r\nexport const authenticated = (token) => {\r\n  return {\r\n    type: AUTHENTICATED,\r\n    token\r\n  }\r\n};\r\n\r\nexport const signOut = () => {\r\n  return {\r\n    type: SIGNOUT\r\n  };\r\n};\r\n\r\nexport const signOutSuccess = () => {\r\n  return {\r\n    type: SIGNOUT_SUCCESS,\r\n  }\r\n};\r\n\r\nexport const signUp = (user) => {\r\n  return {\r\n    type: SIGNUP,\r\n    payload: user\r\n  };\r\n};\r\n\r\nexport const signUpSuccess = (token) => {\r\n  return {\r\n    type: SIGNUP_SUCCESS,\r\n    token\r\n  };\r\n};\r\n\r\nexport const signInWithGoogle = () => {\r\n  return {\r\n    type: SIGNIN_WITH_GOOGLE\r\n  };\r\n};\r\n\r\nexport const signInWithGoogleAuthenticated = (token) => {\r\n  return {\r\n    type: SIGNIN_WITH_GOOGLE_AUTHENTICATED,\r\n    token\r\n  };\r\n};\r\n\r\nexport const signInWithFacebook = () => {\r\n  return {\r\n    type: SIGNIN_WITH_FACEBOOK\r\n  };\r\n};\r\n\r\nexport const signInWithFacebookAuthenticated = (token) => {\r\n  return {\r\n    type: SIGNIN_WITH_FACEBOOK_AUTHENTICATED,\r\n    token\r\n  };\r\n};\r\n\r\nexport const showAuthMessage = (message) => {\r\n  return {\r\n    type: SHOW_AUTH_MESSAGE,\r\n    message\r\n  };\r\n};\r\n\r\nexport const hideAuthMessage = () => {\r\n  return {\r\n    type: HIDE_AUTH_MESSAGE,\r\n  };\r\n};\r\n\r\nexport const showLoading = () => {\r\n  return {\r\n    type: SHOW_LOADING,\r\n  };\r\n};\r\n","class Utils {\r\n\r\n\t/**\r\n\t * Get first character from first & last sentences of a username\r\n\t * @param {String} name - Username\r\n\t * @return {String} 2 characters string\r\n\t */\r\n\tstatic getNameInitial(name) {\r\n\t\tlet initials = name.match(/\\b\\w/g) || [];\r\n\t\treturn ((initials.shift() || '') + (initials.pop() || '')).toUpperCase();\r\n\t}\r\n\r\n\t/**\r\n\t * Get current path related object from Navigation Tree\r\n\t * @param {Array} navTree - Navigation Tree from directory 'configs/NavigationConfig'\r\n\t * @param {String} path - Location path you looking for e.g '/app/dashboards/analytic'\r\n\t * @return {Object} object that contained the path string\r\n\t */\r\n\tstatic getRouteInfo(navTree, path) {\r\n\t\tif( navTree.path === path ){\r\n\t\t  return navTree;\r\n\t\t}\r\n\t\tlet route; \r\n\t\tfor (let p in navTree) {\r\n\t\t  if( navTree.hasOwnProperty(p) && typeof navTree[p] === 'object' ) {\r\n\t\t\t\troute = this.getRouteInfo(navTree[p], path);\r\n\t\t\t\tif(route){\r\n\t\t\t\t\treturn route;\r\n\t\t\t\t}\r\n\t\t  }\r\n\t\t}\r\n\t\treturn route;\r\n\t}\t\r\n\r\n\t/**\r\n\t * Get accessible color contrast\r\n\t * @param {String} hex - Hex color code e.g '#3e82f7'\r\n\t * @return {String} 'dark' or 'light'\r\n\t */\r\n\tstatic getColorContrast(hex){\r\n\t\tif(!hex) {\r\n\t\t\treturn 'dark'\r\n\t\t}\r\n\t\tconst threshold = 130;\r\n\t\tconst hRed = hexToR(hex);\r\n\t\tconst hGreen = hexToG(hex);\r\n\t\tconst hBlue = hexToB(hex);\r\n\t\tfunction hexToR(h) {return parseInt((cutHex(h)).substring(0,2),16)}\r\n\t\tfunction hexToG(h) {return parseInt((cutHex(h)).substring(2,4),16)}\r\n\t\tfunction hexToB(h) {return parseInt((cutHex(h)).substring(4,6),16)}\r\n\t\tfunction cutHex(h) {return (h.charAt(0) === '#') ? h.substring(1,7):h}\r\n\t\tconst cBrightness = ((hRed * 299) + (hGreen * 587) + (hBlue * 114)) / 1000;\r\n\t\tif (cBrightness > threshold){\r\n\t\t\treturn 'dark'\r\n\t\t} else { \r\n\t\t\treturn 'light'\r\n\t\t}\t\r\n\t}\r\n\r\n\t/**\r\n\t * Darken or lighten a hex color \r\n\t * @param {String} color - Hex color code e.g '#3e82f7'\r\n\t * @param {Number} percent - Percentage -100 to 100, positive for lighten, negative for darken\r\n\t * @return {String} Darken or lighten color \r\n\t */\r\n\tstatic shadeColor(color, percent) {\r\n\t\tlet R = parseInt(color.substring(1,3),16);\r\n\t\tlet G = parseInt(color.substring(3,5),16);\r\n\t\tlet B = parseInt(color.substring(5,7),16);\r\n\t\tR = parseInt(R * (100 + percent) / 100);\r\n\t\tG = parseInt(G * (100 + percent) / 100);\r\n\t\tB = parseInt(B * (100 + percent) / 100);\r\n\t\tR = (R<255)?R:255;  \r\n\t\tG = (G<255)?G:255;  \r\n\t\tB = (B<255)?B:255;  \r\n\t\tconst RR = ((R.toString(16).length === 1) ? `0${R.toString(16)}` : R.toString(16));\r\n\t\tconst GG = ((G.toString(16).length === 1) ? `0${G.toString(16)}` : G.toString(16));\r\n\t\tconst BB = ((B.toString(16).length === 1) ? `0${B.toString(16)}` : B.toString(16));\r\n\t\treturn `#${RR}${GG}${BB}`; \r\n\t}\r\n\r\n\t/**\r\n\t * Convert RGBA to HEX \r\n\t * @param {String} rgba - RGBA color code e.g 'rgba(197, 200, 198, .2)')'\r\n\t * @return {String} HEX color \r\n\t */\r\n\tstatic rgbaToHex(rgba) {\r\n\t\tconst trim = str => (str.replace(/^\\s+|\\s+$/gm,''))\r\n\t\tconst inParts = rgba.substring(rgba.indexOf(\"(\")).split(\",\"),\r\n\t\t\tr = parseInt(trim(inParts[0].substring(1)), 10),\r\n\t\t\tg = parseInt(trim(inParts[1]), 10),\r\n\t\t\tb = parseInt(trim(inParts[2]), 10),\r\n\t\t\ta = parseFloat(trim(inParts[3].substring(0, inParts[3].length - 1))).toFixed(2);\r\n\t\t\tconst outParts = [\r\n\t\t\tr.toString(16),\r\n\t\t\tg.toString(16),\r\n\t\t\tb.toString(16),\r\n\t\t\tMath.round(a * 255).toString(16).substring(0, 2)\r\n\t\t];\r\n\r\n\t\toutParts.forEach(function (part, i) {\r\n\t\t\tif (part.length === 1) {\r\n\t\t\t\toutParts[i] = '0' + part;\r\n\t\t\t}\r\n\t\t})\r\n\t\treturn (`#${outParts.join('')}`);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns either a positive or negative \r\n\t * @param {Number} number - number value\r\n\t * @param {any} positive - value that return when positive\r\n\t * @param {any} negative - value that return when negative\r\n\t * @return {any} positive or negative value based on param\r\n\t */\r\n\tstatic getSignNum(number, positive, negative) {\r\n\t\tif (number > 0) {\r\n\t\t\treturn positive\r\n\t\t}\r\n\t\tif (number < 0) {\r\n\t\t\treturn negative\r\n\t\t}\r\n\t\treturn null\r\n\t}\r\n\r\n\t/**\r\n\t * Returns either ascending or descending value\r\n\t * @param {Object} a - antd Table sorter param a\r\n\t * @param {Object} b - antd Table sorter param b\r\n\t * @param {String} key - object key for compare\r\n\t * @return {any} a value minus b value\r\n\t */\r\n\tstatic antdTableSorter(a, b, key) {\r\n\t\tif(typeof a[key] === 'number' && typeof b[key] === 'number') {\r\n\t\t\treturn a[key] - b[key]\r\n\t\t}\r\n\r\n\t\tif(typeof a[key] === 'string' && typeof b[key] === 'string') {\r\n\t\t\ta = a[key].toLowerCase();\r\n\t\t\tb = b[key].toLowerCase();\r\n\t\t\treturn a > b ? -1 : b > a ? 1 : 0;\r\n\t\t}\r\n\t\treturn\r\n\t}\r\n\r\n\t/**\r\n\t * Filter array of object \r\n\t * @param {Array} list - array of objects that need to filter\r\n\t * @param {String} key - object key target\r\n\t * @param {any} value  - value that excluded from filter\r\n\t * @return {Array} a value minus b value\r\n\t */\r\n\tstatic filterArray(list, key, value) {\r\n\t\tlet data = list\r\n\t\tif(list) {\r\n\t\t\tdata = list.filter(item => item[key] === value)\r\n\t\t}\r\n\t\treturn data\r\n\t}\r\n\r\n\t/**\r\n\t * Remove object from array by value\r\n\t * @param {Array} list - array of objects\r\n\t * @param {String} key - object key target\r\n\t * @param {any} value  - target value\r\n\t * @return {Array} Array that removed target object\r\n\t */\r\n\tstatic deleteArrayRow(list, key, value) {\r\n\t\tlet data = list\r\n\t\tif(list) {\r\n\t\t\tdata = list.filter(item => item[key] !== value)\r\n\t\t}\r\n\t\treturn data\r\n\t}\r\n\r\n\t/**\r\n\t * Wild card search on all property of the object\r\n\t * @param {Number | String} input - any value to search\r\n\t * @param {Array} list - array for search\r\n\t * @return {Array} array of object contained keyword\r\n\t */\r\n\tstatic wildCardSearch(list, input) {\r\n\t\tconst searchText = (item) => {\r\n\t\t\tfor (let key in item) {\r\n\t\t\t\tif (item[key] == null) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif (item[key].toString().toUpperCase().indexOf(input.toString().toUpperCase()) !== -1) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\tlist = list.filter(value => searchText(value));\r\n\t\treturn list;\r\n\t}\r\n\r\n\t/**\r\n\t * Get Breakpoint\r\n\t * @param {Object} screens - Grid.useBreakpoint() from antd\r\n\t * @return {Array} array of breakpoint size\r\n\t */\r\n\tstatic getBreakPoint(screens) {\r\n\t\tlet breakpoints = []\r\n\t\tfor (const key in screens) {\r\n\t\t\tif (screens.hasOwnProperty(key)) {\r\n\t\t\t\tconst element = screens[key];\r\n\t\t\t\tif (element) {\r\n\t\t\t\t\tbreakpoints.push(key)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn breakpoints\r\n\t}\r\n}\r\n\r\nexport default Utils;","import React from 'react';\r\nimport { Spin } from 'antd';\r\nimport PropTypes from 'prop-types'\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\n\r\nconst Icon = <LoadingOutlined style={{ fontSize: 35 }} spin />\r\n\r\nconst Loading = (props) => {\r\n\tconst { align, cover } = props\r\n\treturn (\r\n\t\t<div className={`loading text-${align} cover-${cover}`}>\r\n\t\t\t<Spin indicator={Icon} />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nLoading.propTypes = {\r\n\tsize: PropTypes.string,\r\n\tcover: PropTypes.string\r\n}\r\n\r\nLoading.defaultProps = {\r\n\talign: 'center',\r\n\tcover: 'inline'\r\n};\r\n\r\nexport default Loading"],"sourceRoot":""}