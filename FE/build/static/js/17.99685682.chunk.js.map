{"version":3,"sources":["history.js","auth/FetchInterceptor.js","services/classes.js","components/shared-components/AvatarStatus/index.js","components/shared-components/EllipsisDropdown/index.js","../node_modules/@ant-design/icons-svg/es/asn/DeleteOutlined.js","../node_modules/@ant-design/icons/es/icons/DeleteOutlined.js","views/app-views/apps/classes/index.js","../node_modules/@ant-design/icons-svg/es/asn/PlusCircleOutlined.js","../node_modules/@ant-design/icons/es/icons/PlusCircleOutlined.js"],"names":["history","service","axios","create","baseURL","API_BASE_URL","timeout","ENTRY_ROUTE","interceptors","request","use","config","jwtToken","localStorage","getItem","AUTH_TOKEN","headers","push","window","location","reload","error","notification","message","Promise","reject","response","data","notificationParam","status","description","removeItem","classesService","id","get","concat","params","delete","post","file","formData","FormData","append","type","Error","responseType","ids","renderAvatar","props","_jsx","Avatar","className","children","text","AvatarStatus","name","suffix","subTitle","src","icon","size","shape","gap","onNameClick","_jsxs","onClick","EllipsisDropdown","Dropdown","overlay","menu","placement","trigger","EllipsisOutlined","defaultProps","Menu","DeleteOutlined","ref","React","AntdIcon","_objectSpread","DeleteOutlinedSvg","displayName","Option","Select","Classes","useHistory","ClassesData","setClassesData","useState","useEffect","async","getAll","console","fetchClasses","list","setList","selectedRows","setSelectedRows","selectedRowKeys","setSelectedRowKeys","editClass","row","viewDetails","deleteRow","objKey","length","elm","utils","deleteArrayRow","success","handleCopy","tableColumns","title","dataIndex","render","_","record","index","sorter","a","b","antdTableSorter","Item","Flex","alignItems","EyeOutlined","EditOutlined","CopyOutlined","rowSelection","onChange","key","rows","Card","justifyContent","mobileFlex","Input","placeholder","prefix","SearchOutlined","e","value","currentTarget","searchArray","wildCardSearch","onSearch","defaultValue","style","minWidth","log","copy","handleMultipleCopy","Button","addClass","PlusCircleOutlined","block","Table","columns","dataSource","rowKey","pagination","showSizeChanger","showTotal","total","range","preserveSelectedRowKeys","PlusCircleOutlinedSvg"],"mappings":"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","file":"static/js/17.99685682.chunk.js","sourcesContent":["import * as history from 'history';\r\n\r\nexport default history.createBrowserHistory();","import axios from 'axios'\r\nimport { API_BASE_URL } from 'configs/AppConfig'\r\nimport history from '../history'\r\nimport { AUTH_TOKEN } from 'redux/constants/Auth'\r\nimport { notification } from 'antd';\r\n\r\nconst service = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  timeout: 60000\r\n})\r\n\r\n// Config\r\nconst ENTRY_ROUTE = '/auth/login'\r\nconst TOKEN_PAYLOAD_KEY = 'authorization'\r\nconst PUBLIC_REQUEST_KEY = 'public-request'\r\n\r\n// API Request interceptor\r\nservice.interceptors.request.use(config => {\r\n\tconst jwtToken = localStorage.getItem(AUTH_TOKEN)\r\n\t\r\n  if (jwtToken) {\r\n    config.headers[TOKEN_PAYLOAD_KEY] = jwtToken\r\n  }\r\n\r\n  if (!jwtToken && !config.headers[PUBLIC_REQUEST_KEY]) {\r\n\t\thistory.push(ENTRY_ROUTE)\r\n\t\twindow.location.reload();\r\n  }\r\n\r\n  return config\r\n}, error => {\r\n\t// Do something with request error here\r\n\tnotification.error({\r\n\t\tmessage: 'Error'\r\n\t})\r\n  Promise.reject(error)\r\n})\r\n\r\n// API respone interceptor\r\nservice.interceptors.response.use( (response) => {\r\n\treturn response.data\r\n}, (error) => {\r\n\r\n\tlet notificationParam = {\r\n\t\tmessage: ''\r\n\t}\r\n\t\r\n\t// Ensure error.response is defined\r\n\tif (error.response) {\r\n\t\t// Remove token and redirect \r\n\t\tif (error.response.status === 400 || error.response.status === 403 || error.response.status === 401) {\r\n\t\t\tnotificationParam.message = 'Authentication Fail'\r\n\t\t\tnotificationParam.description = 'Please login again'\r\n\t\t\tlocalStorage.removeItem(AUTH_TOKEN)\r\n\t\t\thistory.push(ENTRY_ROUTE)\r\n\t\t\twindow.location.reload();\r\n\t\t}\r\n\r\n\t\tif (error.response.status === 404) {\r\n\t\t\tnotificationParam.message = 'Not Found'\r\n\t\t}\r\n\r\n\t\tif (error.response.status === 500) {\r\n\t\t\tnotificationParam.message = 'Internal Server Error'\r\n\t\t}\r\n\t\t\r\n\t\tif (error.response.status === 508) {\r\n\t\t\tnotificationParam.message = 'Time Out'\r\n\t\t}\r\n\r\n\t\tnotification.error(notificationParam)\r\n\t}\r\n\r\n\treturn Promise.reject(error);\r\n});\r\n\r\nexport default service","import service from 'auth/FetchInterceptor'\r\n\r\nconst classesService = {}\r\n\r\nclassesService.getByID = function (id) {\r\n  return service.get(`/classes/${id}`)\r\n}\r\n\r\nclassesService.getAll = function (params) {\r\n  return service.get('/classes', { params })\r\n}\r\n\r\nclassesService.delete = function (id) {\r\n  return service.delete(`/classes/${id}`)\r\n}\r\n\r\nclassesService.update = function (id, data) {\r\n  return service.post(`/classes/${id}`, data)\r\n}\r\n\r\nclassesService.create = function (data) {\r\n  return service.post('/classes', data)\r\n}\r\n\r\nclassesService.copy = function (id) {\r\n  return service.post(`/classes/${id}/copy`)\r\n}\r\n\r\nclassesService.import = function (file) {\r\n  const formData = new FormData();\r\n  formData.append('attachment', file);\r\n  return service.post('/classes/import', formData, {\r\n    headers: {\r\n      'Content-Type': 'multipart/form-data'\r\n    }\r\n  });\r\n}\r\n\r\nclassesService.exportAll = function (type) {\r\n  if (type !== 'xlsx' && type !== 'csv') {\r\n    throw new Error('File type must be either xlsx or csv');\r\n  }\r\n\r\n  return service.get(`/classes/export?type=${type}`, {\r\n    responseType: 'blob' // Ensure response is treated as a binary file\r\n  });\r\n};\r\n\r\n\r\nclassesService.export = function (ids, type) {\r\n  if (type !== 'xlsx' && type !== 'csv') {\r\n    throw new Error('File type must be either xlsx or csv');\r\n  }\r\n  return service.post(`/classes/export/${type}`, { ids });\r\n}\r\n\r\nexport default classesService\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { Avatar } from 'antd';\r\n\r\nconst renderAvatar = props => {\r\n\treturn <Avatar {...props} className={`ant-avatar-${props.type}`}>{props.text}</Avatar>;\r\n}\r\n\r\nexport const AvatarStatus = props => {\r\n\tconst { name, suffix, subTitle, id, type, src, icon, size, shape, gap, text, onNameClick } = props\r\n\treturn (\r\n\t\t<div className=\"avatar-status d-flex align-items-center\">\r\n\t\t\t{renderAvatar({icon, src, type, size, shape, gap, text })}\r\n\t\t\t<div className=\"ml-2\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tonNameClick ? \r\n\t\t\t\t\t\t<div onClick={() => onNameClick({name, subTitle, src, id})} className=\"avatar-status-name clickable\">{name}</div> \r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\t<div className=\"avatar-status-name\">{name}</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t<span>{suffix}</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"text-muted avatar-status-subtitle\">{subTitle}</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nAvatarStatus.propTypes = {\r\n\tname: PropTypes.string,\r\n\tsrc: PropTypes.string,\r\n\ttype: PropTypes.string,\r\n\tonNameClick: PropTypes.func\r\n}\r\n\r\n\r\nexport default AvatarStatus;\r\n","import React from 'react'\r\nimport { Dropdown, Menu } from 'antd';\r\nimport { EllipsisOutlined } from '@ant-design/icons';\r\nimport PropTypes from 'prop-types'\r\n\r\nconst EllipsisDropdown = props => {\r\n\treturn (\r\n\t\t<Dropdown overlay={props.menu} placement={props.placement} trigger={['click']}>\r\n\t\t\t<div className=\"ellipsis-dropdown\">\r\n\t\t\t\t<EllipsisOutlined />\r\n\t\t\t</div>\r\n\t\t</Dropdown>\r\n\t)\r\n}\r\n\r\nEllipsisDropdown.propTypes = {\r\n\ttrigger: PropTypes.string,\r\n\tplacement: PropTypes.string\r\n}\r\n\r\nEllipsisDropdown.defaultProps = {\r\n\ttrigger: 'click',\r\n\tplacement: 'bottomRight',\r\n\tmenu: <Menu/>\r\n};\r\n\r\nexport default EllipsisDropdown\r\n","// This icon file is generated automatically.\nvar DeleteOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M360 184h-8c4.4 0 8-3.6 8-8v8h304v-8c0 4.4 3.6 8 8 8h-8v72h72v-80c0-35.3-28.7-64-64-64H352c-35.3 0-64 28.7-64 64v80h72v-72zm504 72H160c-17.7 0-32 14.3-32 32v32c0 4.4 3.6 8 8 8h60.4l24.7 523c1.6 34.1 29.8 61 63.9 61h454c34.2 0 62.3-26.8 63.9-61l24.7-523H888c4.4 0 8-3.6 8-8v-32c0-17.7-14.3-32-32-32zM731.3 840H292.7l-24.2-512h487l-24.2 512z\" } }] }, \"name\": \"delete\", \"theme\": \"outlined\" };\nexport default DeleteOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport DeleteOutlinedSvg from \"@ant-design/icons-svg/es/asn/DeleteOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar DeleteOutlined = function DeleteOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: DeleteOutlinedSvg\n  }));\n};\n\nDeleteOutlined.displayName = 'DeleteOutlined';\nexport default /*#__PURE__*/React.forwardRef(DeleteOutlined);","import React, {useState} from 'react'\r\nimport { Card, Table, Select, Input, Button, Menu, message } from 'antd';\r\nimport classesService from 'services/classes'\r\nimport { EyeOutlined, DeleteOutlined, SearchOutlined, PlusCircleOutlined, EditOutlined, CopyOutlined } from '@ant-design/icons';\r\nimport AvatarStatus from 'components/shared-components/AvatarStatus';\r\nimport EllipsisDropdown from 'components/shared-components/EllipsisDropdown';\r\nimport Flex from 'components/shared-components/Flex'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport utils from 'utils'\r\nconst { Option } = Select\r\n\r\n// const getStockStatus = stockCount => {\r\n// \tif(stockCount >= 10) {\r\n// \t\treturn <><Badge status=\"success\" /><span>Active</span></>\r\n// \t}\r\n// \tif(stockCount < 10 && stockCount > 0) {\r\n// \t\treturn <><Badge status=\"warning\" /><span>Warning</span></>\r\n// \t}\r\n// \tif(stockCount === 0) {\r\n// \t\treturn <><Badge status=\"error\" /><span>Inactive</span></>\r\n// \t}\r\n// \treturn null\r\n// }\r\n\r\n//const categories = ['Information Technology', 'Electronics Telecommunications', 'Mechanics Engineering', 'Physics Engineering', 'Civil Engineering']\r\n\r\nconst Classes = () => {\r\n\tlet history = useHistory();\r\n\tconst [ClassesData, setClassesData] = useState([]);\r\n\r\n\tReact.useEffect(() => {\r\n\t\tconst fetchClasses = async () => {\r\n\t\t\ttry {\r\n\t\t\t\tconst response = await classesService.getAll();\r\n\t\t\t\tsetClassesData(response.data || []);\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.error('Error fetching classes:', error);\r\n\t\t\t\tsetClassesData([]);\r\n\t\t\t}\r\n\t\t};\r\n\t\tfetchClasses();\r\n\t}, []);\r\n\t// console.log('ClassesData:', ClassesData);\r\n\tconst [list, setList] = useState([]);\r\n\r\n\tReact.useEffect(() => {\r\n\t\tsetList(ClassesData);\r\n\t}, [ClassesData]);\r\n\t\r\n\tconst [selectedRows, setSelectedRows] = useState([])\r\n\tconst [selectedRowKeys, setSelectedRowKeys] = useState([])\r\n\r\n\tconst dropdownMenu = row => (\r\n\t\t<Menu>\r\n\t\t\t<Menu.Item onClick={() => viewDetails(row)}>\r\n\t\t\t\t<Flex alignItems=\"center\">\r\n\t\t\t\t\t<EyeOutlined />\r\n\t\t\t\t\t<span className=\"ml-2\">View Details</span>\r\n\t\t\t\t</Flex>\r\n\t\t\t</Menu.Item>\r\n\t\t\t<Menu.Item onClick={() => editClass(row)}>\r\n\t\t\t\t<Flex alignItems=\"center\">\r\n\t\t\t\t\t<EditOutlined />\r\n\t\t\t\t\t<span className=\"ml-2\">Edit</span>\r\n\t\t\t\t</Flex>\r\n\t\t\t</Menu.Item>\r\n\t\t\t<Menu.Item onClick={() => deleteRow(row)}>\r\n\t\t\t\t<Flex alignItems=\"center\">\r\n\t\t\t\t\t<DeleteOutlined />\r\n\t\t\t\t\t<span className=\"ml-2\">{selectedRows.length > 0 ? `Delete (${selectedRows.length})` : 'Delete'}</span>\r\n\t\t\t\t</Flex>\r\n\t\t\t</Menu.Item>\r\n\t\t\t<Menu.Item onClick={() => handleCopy(row)}>\r\n\t\t\t\t<Flex alignItems=\"center\">\r\n\t\t\t\t\t<CopyOutlined />\r\n\t\t\t\t\t<span className=\"ml-2\">Copy</span>\r\n\t\t\t\t</Flex>\r\n\t\t\t</Menu.Item>\r\n\t\t</Menu>\r\n\t);\r\n\t\r\n\tconst addClass = () => {\r\n\t\thistory.push(`/app/apps/add-class`)\r\n\t}\r\n\t\r\n\tconst editClass = row => {\r\n\t\thistory.push(`/app/apps/edit-class/${row.id}`)\r\n\t}\r\n\r\n\tconst viewDetails = row => {\r\n\t\thistory.push(`/app/apps/view-class/${row.id}`)\r\n\t}\r\n\t\r\n\t\r\n\tconst deleteRow = async (row) => {\r\n\t\ttry {\r\n\t\t\tconst objKey = 'id';\r\n\t\t\tlet data = [...list];\r\n\t\t\t\r\n\t\t\tif (selectedRows.length > 1) {\r\n\t\t\t\tfor (const elm of selectedRows) {\r\n\t\t\t\t\tawait classesService.delete(elm.id);\r\n\t\t\t\t\tdata = utils.deleteArrayRow(data, objKey, elm.id);\r\n\t\t\t\t}\r\n\t\t\t\tmessage.success('Classes deleted successfully');\r\n\t\t\t} else if (row) {\r\n\t\t\t\tawait classesService.delete(row.id);\r\n\t\t\t\tdata = utils.deleteArrayRow(data, objKey, row.id);\r\n\t\t\t\tmessage.success('Class deleted successfully');\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tsetList(data);\r\n\t\t\tsetSelectedRows([]);\r\n\t\t\tsetSelectedRowKeys([]);\r\n\t\t\thistory.push('/app/apps/classes');\r\n\t\t} catch (error) {\r\n\t\t\tmessage.error('Error deleting class(es)');\r\n\t\t\tconsole.error(\"Error deleting class(es):\", error);\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleCopy = row => {\r\n\t\thistory.push(`/app/apps/copy-class/${row.id}`);\r\n\t}\r\n\r\n\tconst tableColumns = [\r\n\t\t{\r\n\t\t\ttitle: 'ID',\r\n\t\t\tdataIndex: 'id',\r\n\t\t\trender: (_, record, index) => {\r\n\t\t\t\treturn index + 1;\r\n\t\t\t},\r\n\t\t\tsorter: (a, b) => a.id - b.id\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Class Name',\r\n\t\t\tdataIndex: 'name',\r\n\t\t\trender: (_, record) => (\r\n\t\t\t\t<div className=\"d-flex\">\r\n\t\t\t\t\t<AvatarStatus size={60} type=\"square\" src={'/img/thumbs/book.webp'} name={record.name}/>\r\n\t\t\t\t</div>\r\n\t\t\t),\r\n\t\t\tsorter: (a, b) => utils.antdTableSorter(a, b, 'name')\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Code',\r\n\t\t\tdataIndex: 'code',\r\n\t\t\tsorter: (a, b) => utils.antdTableSorter(a, b, 'code')\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Description',\r\n\t\t\tdataIndex: 'description',\r\n\t\t\tsorter: (a, b) => utils.antdTableSorter(a, b, 'description')\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: '',\r\n\t\t\tdataIndex: 'actions',\r\n\t\t\trender: (_, elm) => (\r\n\t\t\t\t<div className=\"text-right\">\r\n\t\t\t\t\t<EllipsisDropdown menu={dropdownMenu(elm)}/>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}\r\n\t];\r\n\t\r\n\tconst rowSelection = {\r\n\t\tonChange: (key, rows) => {\r\n\t\t\tsetSelectedRows(rows)\r\n\t\t\tsetSelectedRowKeys(key)\r\n\t\t}\r\n\t};\r\n\r\n\tconst onSearch = e => {\r\n\t\tconst value = e.currentTarget.value\r\n\t\tconst searchArray = e.currentTarget.value? list : ClassesData\r\n\t\tconst data = utils.wildCardSearch(searchArray, value)\r\n\t\tsetList(data)\r\n\t\tsetSelectedRowKeys([])\r\n\t}\r\n\tconst handleExport = () => {\r\n\t\tconsole.log('exporting')\r\n\t\thistory.push('/app/apps/export-class');\r\n\t}\r\n\tconst handleImport = () => {\r\n\t\tconsole.log('importing')\r\n\r\n\t\t// Display file import dialog or redirect to import page\r\n\t\t// You don't need additional code here since you're already\r\n\t\t// navigating to the import page with history.push\r\n\t\thistory.push('/app/apps/import-class');\r\n\t}\r\n\tconst handleDelete = () => {\r\n\t\tconsole.log('deleting')\r\n\t\tdeleteRow()\r\n\t}\r\n\r\n\tconst handleMultipleCopy = async (row) => { \r\n\t\ttry {\r\n\t\t\tif (selectedRows.length > 1) {\r\n\t\t\t\tfor (const elm of selectedRows) {\r\n\t\t\t\t\tawait classesService.copy(elm.id);\r\n\t\t\t\t}\r\n\t\t\t\tmessage.success('Classes copied successfully');\r\n\t\t\t\thistory.push('/app/apps/classes');\r\n\t\t\t} else if (row) {\r\n\t\t\t\tawait classesService.copy(row.id);\r\n\t\t\t\tmessage.success('Class copied successfully');\r\n\t\t\t}\r\n\t\t\tsetSelectedRows([]);\r\n\t\t\tsetSelectedRowKeys([]);\r\n\t\t} catch (error) {\r\n\t\t\tmessage.error('Error copying class(es)');\r\n\t\t\tconsole.error(\"Error copying class(es):\", error);\r\n\t\t}\r\n\t}\r\n\t\r\n\r\n\treturn (\r\n\t\t<Card>\t\r\n\t\t\t<Flex alignItems=\"center\" justifyContent=\"between\" mobileFlex={false}>\r\n\t\t\t\t<Flex className=\"mb-1\" mobileFlex={false}>\r\n\t\t\t\t\t<div className=\"mr-md-3 mb-3\">\r\n\t\t\t\t\t\t<Input placeholder=\"Search\" prefix={<SearchOutlined />} onChange={e => onSearch(e)}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"mb-3\">\r\n\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\tdefaultValue=\"Action\" \r\n\t\t\t\t\t\t\tclassName=\"w-100\" \r\n\t\t\t\t\t\t\tstyle={{ minWidth: 180 }} \r\n\t\t\t\t\t\t\tplaceholder=\"Action\"\r\n\t\t\t\t\t\t\tonChange={(value) => {\r\n\t\t\t\t\t\t\t\tif (value === 'Export') handleExport();\r\n\t\t\t\t\t\t\t\tif (value === 'Import') handleImport();\r\n\t\t\t\t\t\t\t\tif (value === 'Delete') handleDelete();\r\n\t\t\t\t\t\t\t\tif (value === 'Copy') handleMultipleCopy();\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Option value=\"Export\">Export data</Option>\r\n\t\t\t\t\t\t\t<Option value=\"Import\">Import data</Option>\r\n\t\t\t\t\t\t\t<Option value=\"Delete\">Delete data</Option>\r\n\t\t\t\t\t\t\t<Option value=\"Copy\">Copy data</Option>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Flex>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Button onClick={addClass} type=\"primary\" icon={<PlusCircleOutlined />} block>Add Class</Button>\r\n\t\t\t\t</div>\r\n\t\t\t</Flex>\r\n\t\t\t<div className=\"table-responsive\">\r\n\t\t\t\t<Table \r\n\t\t\t\t\tcolumns={tableColumns} \r\n\t\t\t\t\tdataSource={list} \r\n\t\t\t\t\trowKey='id'\r\n\t\t\t\t\tpagination={{\r\n\t\t\t\t\t\tshowSizeChanger: true,\r\n\t\t\t\t\t\tshowTotal: (total, range) => `${range[0]}-${range[1]} of ${total} items`\r\n\t\t\t\t\t}}\r\n\t\t\t\t\trowSelection={{\r\n\t\t\t\t\t\tselectedRowKeys: selectedRowKeys,\r\n\t\t\t\t\t\ttype: 'checkbox',\r\n\t\t\t\t\t\tpreserveSelectedRowKeys: false,\r\n\t\t\t\t\t\t...rowSelection,\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</Card>\r\n\t)\r\n}\r\n\r\nexport default Classes;\r\n","// This icon file is generated automatically.\nvar PlusCircleOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M696 480H544V328c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8v152H328c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h152v152c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8V544h152c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z\" } }] }, \"name\": \"plus-circle\", \"theme\": \"outlined\" };\nexport default PlusCircleOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport PlusCircleOutlinedSvg from \"@ant-design/icons-svg/es/asn/PlusCircleOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar PlusCircleOutlined = function PlusCircleOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: PlusCircleOutlinedSvg\n  }));\n};\n\nPlusCircleOutlined.displayName = 'PlusCircleOutlined';\nexport default /*#__PURE__*/React.forwardRef(PlusCircleOutlined);"],"sourceRoot":""}